(startRule 
	(compilationUnit 
		(programUnit 
			(identificationDivision IDENTIFICATION DIVISION .\n        
				(programIdParagraph PROGRAM-ID .\n            
					(programName 
						(cobolWord NC243A)) .\n       \n      )) 
			(environmentDivision ENVIRONMENT DIVISION .\n        
				(environmentDivisionBody 
					(configurationSection CONFIGURATION SECTION .\n        
						(configurationSectionParagraph 
							(sourceComputerParagraph SOURCE-COMPUTER .\n            
								(computerName 
									(systemName 
										(cobolWord XXXXX082))) .\n       )) 
						(configurationSectionParagraph 
							(objectComputerParagraph OBJECT-COMPUTER .\n            
								(computerName 
									(systemName 
										(cobolWord XXXXX083))) .\n       )))) 
				(environmentDivisionBody 
					(inputOutputSection INPUT-OUTPUT SECTION .\n        
						(inputOutputSectionParagraph 
							(fileControlParagraph FILE-CONTROL .\n            
								(fileControlEntry 
									(selectClause SELECT 
										(fileName 
											(cobolWord PRINT-FILE))) 
									(fileControlClause 
										(assignClause ASSIGN TO 
											(assignmentName 
												(systemName 
													(cobolWord XXXXX055)))))) .\n       ))))) 
			(dataDivision DATA DIVISION .\n        
				(dataDivisionSection 
					(fileSection FILE SECTION .\n        
						(fileDescriptionEntry FD 
							(fileName 
								(cobolWord PRINT-FILE)) .\n        
							(dataDescriptionEntry 
								(dataDescriptionEntryFormat1 01 
									(dataName 
										(cobolWord PRINT-REC)) 
									(dataPictureClause PICTURE 
										(pictureString 
											(pictureChars X) 
											(pictureChars () 
											(pictureChars 
												(integerLiteral 120)) 
											(pictureChars )))) .\n       )) 
							(dataDescriptionEntry 
								(dataDescriptionEntryFormat1 01 
									(dataName 
										(cobolWord DUMMY-RECORD)) 
									(dataPictureClause PICTURE 
										(pictureString 
											(pictureChars X) 
											(pictureChars () 
											(pictureChars 
												(integerLiteral 120)) 
											(pictureChars )))) .\n       ))))) 
				(dataDivisionSection 
					(workingStorageSection WORKING-STORAGE SECTION .\n        
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord SUB-1)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars S99))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord SUB-2)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord SUB-3)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord TEST-CHECK)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord CON-7)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 07)))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord CON-10)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 10)))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord ELEM-HOLD-AREA)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACES))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord CON-5)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 05)))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord SEC-HOLD-AREA)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 11)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACES))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord CON-6)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 06)))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord GRP-HOLD-AREA)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 5)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACES))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord N1)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord N2)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord N3)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord N4)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord N5)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord N6)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord N7)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord GRP-NAME)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars XXX))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "GRP")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord ADD-GRP)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 01)))))) .\n       \n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord SEC-NAME)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 5)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "SEC (")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord SEC-GRP)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 00)))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal ",")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord ADD-SEC)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 01)))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal ")")))) .\n       \n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord ELEM-NAME)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 6)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "ELEM (")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord ELEM-GRP)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 00)))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal ",")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord ELEM-SEC)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 00)))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal ",")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord ADD-ELEM)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 01)))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal ")")))) .\n       \n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord 3-DIMENSION-TBL)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord GRP-ENTRY)) 
								(dataOccursClause OCCURS 
									(integerLiteral 10) TIMES 
									(dataOccursIndexed INDEXED BY 
										(indexName 
											(cobolWord IDX-1)))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord ENTRY-1)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 5)) 
										(pictureChars )))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord GRP2-ENTRY)) 
								(dataOccursClause OCCURS 
									(integerLiteral 10) TIMES 
									(dataOccursIndexed INDEXED BY 
										(indexName 
											(cobolWord IDX-2)))) .\n                   )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 
								(dataName 
									(cobolWord ENTRY-2)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 11)) 
										(pictureChars )))) .\n                   )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 
								(dataName 
									(cobolWord GRP3-ENTRY)) 
								(dataOccursClause OCCURS 
									(integerLiteral 10) TIMES 
									(dataOccursIndexed INDEXED BY 
										(indexName 
											(cobolWord IDX-3)))) .\n                       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 05 
								(dataName 
									(cobolWord ENTRY-3)) 
								(dataPictureClause PICTURE 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) .\n       \n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord 7-DIMENSION-TBL)) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord GRP-7-1-ENTRY)) 
								(dataOccursClause OCCURS 
									(integerLiteral 2) 
									(dataOccursIndexed INDEXED BY 
										(indexName 
											(cobolWord X1)))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord ENTRY-7-1)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XX))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord GRP-7-2-ENTRY)) 
								(dataOccursClause OCCURS 
									(integerLiteral 2) 
									(dataOccursIndexed INDEXED BY 
										(indexName 
											(cobolWord X2)))) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 
								(dataName 
									(cobolWord ENTRY-7-2)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XX))) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 
								(dataName 
									(cobolWord GRP-7-3-ENTRY)) 
								(dataOccursClause OCCURS 
									(integerLiteral 2) 
									(dataOccursIndexed INDEXED BY 
										(indexName 
											(cobolWord X3)))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 05 
								(dataName 
									(cobolWord ENTRY-7-3)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XX))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 05 
								(dataName 
									(cobolWord GRP-7-4-ENTRY)) 
								(dataOccursClause OCCURS 
									(integerLiteral 2) 
									(dataOccursIndexed INDEXED BY 
										(indexName 
											(cobolWord X4)))) .\n                 )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 06 
								(dataName 
									(cobolWord ENTRY-7-4)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XX))) .\n                 )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 06 
								(dataName 
									(cobolWord GRP-7-5-ENTRY)) 
								(dataOccursClause OCCURS 
									(integerLiteral 2) 
									(dataOccursIndexed INDEXED BY 
										(indexName 
											(cobolWord X5)))) .\n                   )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 07 
								(dataName 
									(cobolWord ENTRY-7-5)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XX))) .\n                   )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 07 
								(dataName 
									(cobolWord GRP-7-6-ENTRY)) 
								(dataOccursClause OCCURS 
									(integerLiteral 2) 
									(dataOccursIndexed INDEXED BY 
										(indexName 
											(cobolWord X6)))) .\n                     )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 08 
								(dataName 
									(cobolWord ENTRY-7-6)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XX))) .\n                     )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 08 
								(dataName 
									(cobolWord GRP-7-7-ENTRY)) 
								(dataOccursClause OCCURS 
									(integerLiteral 2) 
									(dataOccursIndexed INDEXED BY 
										(indexName 
											(cobolWord X7)))) .\n                       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 09 
								(dataName 
									(cobolWord ENTRY-7-7)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XX))) .\n       \n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord WS-FLAG)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 5)) 
										(pictureChars )))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord TEST-RESULTS)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord FEATURE)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 20)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord P-OR-F)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 5)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord PAR-NAME)) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 19)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord PARDOT-X)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord DOTVALUE)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 8)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord RE-MARK)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 61)) 
										(pictureChars )))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord TEST-COMPUTED)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 30)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 17)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "       COMPUTED=")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord COMPUTED-X)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord COMPUTED-A)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 20)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord COMPUTED-N)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord COMPUTED-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars )) 
										(pictureChars .9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord COMPUTED-0V18)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord COMPUTED-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars -.9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 18)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord COMPUTED-4V14)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord COMPUTED-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )) 
										(pictureChars .9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 14)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord COMPUTED-14V4)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord COMPUTED-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 14)) 
										(pictureChars )) 
										(pictureChars .9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord CM-18V0)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord COMPUTED-A))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 
								(dataName 
									(cobolWord COMPUTED-18V0)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 18)) 
										(pictureChars )))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 50)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord TEST-CORRECT)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 30)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 17)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "       CORRECT =")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord CORRECT-X)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord CORRECT-A)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 20)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord CORRECT-N)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord CORRECT-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars )) 
										(pictureChars .9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord CORRECT-0V18)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord CORRECT-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars -.9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 18)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord CORRECT-4V14)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord CORRECT-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )) 
										(pictureChars .9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 14)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord CORRECT-14V4)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord CORRECT-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 14)) 
										(pictureChars )) 
										(pictureChars .9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord CR-18V0)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord CORRECT-A))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 
								(dataName 
									(cobolWord CORRECT-18V0)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 18)) 
										(pictureChars )))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 2)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord COR-ANSI-REFERENCE)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 48)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-C-1)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC IS 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 99)) 
										(pictureChars )))) 
								(dataValueClause VALUE IS 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " FEATURE              PASS  PARAGRAPH-NAME                                                 REMARKS")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 20)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-C-2)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 6)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "TESTED")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "FAIL")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 94)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord REC-SKL-SUB)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 2)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord REC-CT)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord DELETE-COUNTER)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 999)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord ERROR-COUNTER)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 999)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord INSPECT-COUNTER)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 999)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord PASS-COUNTER)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 999)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord TOTAL-ERROR)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 999)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord ERROR-HOLD)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 999)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord L4-HOLD)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XX))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord L5-HOLD)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XX))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord L6-HOLD)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XX))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord L7-HOLD)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XX))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord DUMMY-HOLD)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 120)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord RECORD-COUNT)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 5)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord ANSI-REFERENCE)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 48)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACES))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-H-1)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 39)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACES))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 42)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "OFFICIAL COBOL COMPILER VALIDATION SYSTEM")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 39)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACES))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-H-2A)) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 40)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 7)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "CCVS85 ")))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XXXX))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "4.2 ")))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 28)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " COPY - NOT FOR DISTRIBUTION")))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 41)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       \n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-H-2B)) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "TEST RESULT OF ")))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord TEST-ID)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars )))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " IN ")))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 12)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " HIGH       ")))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 22)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " LEVEL VALIDATION FOR ")))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 58)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "ON-SITE VALIDATION, NATIONAL INSTITUTE OF STD & TECH.     ")))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-H-3)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 34)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " FOR OFFICIAL USE ONLY    ")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 58)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "COBOL 85 VERSION 4.2, Apr  1993 SSVG                      ")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 28)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "  COPYRIGHT   1985 ")))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-E-1)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 52)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 14)) 
										(pictureChars )))) 
								(dataValueClause VALUE IS 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "END OF TEST-  ")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord ID-AGAIN)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 45)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACES))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-E-2)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 31)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 21)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord CCVS-E-2-2)) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord ERROR-TOTAL)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XXX))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord ENDER-DESC)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 44)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "ERRORS ENCOUNTERED")))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-E-3)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 22)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " FOR OFFICIAL USE ONLY")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 12)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 58)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "ON-SITE VALIDATION, NATIONAL INSTITUTE OF STD & TECH.     ")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 13)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " COPYRIGHT 1985")))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-E-4)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord CCVS-E-4-1)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XXX))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " OF ")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord CCVS-E-4-2)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XXX))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 40)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "  TESTS WERE EXECUTED SUCCESSFULLY")))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord XXINFO)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 19)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "*** INFORMATION ***")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord INFO-TEXT)) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 8)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 
								(dataName 
									(cobolWord XXCOMPUTED)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 20)) 
										(pictureChars )))) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 5)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 
								(dataName 
									(cobolWord XXCORRECT)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 20)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord INF-ANSI-REFERENCE)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 48)) 
										(pictureChars )))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord HYPHEN-LINE)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC IS 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE IS 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC IS 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 65)) 
										(pictureChars )))) 
								(dataValueClause VALUE IS 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "*****************************************************************")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC IS 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 54)) 
										(pictureChars )))) 
								(dataValueClause VALUE IS 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "******************************************************")))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-PGM-ID)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "NC243A")))) .\n       ))))) 
			(procedureDivision PROCEDURE DIVISION .\n        
				(procedureDivisionBody paragraphs 
					(procedureSection 
						(procedureSectionHeader 
							(sectionName 
								(cobolWord CCVS1)) SECTION) .\n        
						(paragraphs 
							(paragraph 
								(paragraphName 
									(cobolWord OPEN-FILES)) .\n            
								(sentence 
									(statement 
										(openStatement OPEN 
											(openOutputStatement OUTPUT 
												(openOutput 
													(fileName 
														(cobolWord PRINT-FILE)))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-PGM-ID)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-ID)))))))) . ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-PGM-ID)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ID-AGAIN)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACE))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-RESULTS)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord HEAD-ROUTINE))) THRU 
												(procedureName 
													(paragraphName 
														(cobolWord COLUMN-NAMES-ROUTINE)))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord CCVS1-EXIT)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord CLOSE-FILES)) .\n            
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord END-ROUTINE))) THRU 
												(procedureName 
													(paragraphName 
														(cobolWord END-ROUTINE-13)))))) . ) 
								(sentence 
									(statement 
										(closeStatement CLOSE 
											(closeFile 
												(fileName 
													(cobolWord PRINT-FILE))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TERMINATE-CCVS)) .\n       
								(sentence 
									(statement 
										(stopStatement STOP RUN)) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord INSPT)) .  
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "INSPT")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord P-OR-F)))))))) . ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord INSPECT-COUNTER))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord PASS)) .   
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PASS ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord P-OR-F)))))))) .  ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord PASS-COUNTER))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord FAIL)) .   
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "FAIL*")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord P-OR-F)))))))) .  ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ERROR-COUNTER))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord DE-LETE)) .   
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "*****")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord P-OR-F)))))))) .  ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord DELETE-COUNTER))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "****TEST DELETED****")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord PRINT-DETAIL)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord REC-CT))))))))) 
																(relationalOperator NOT EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant ZERO))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal ".")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord PARDOT-X)))))))) 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord REC-CT)))))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord DOTVALUE))))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord TEST-RESULTS)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PRINT-REC)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord P-OR-F))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "FAIL*")))))))))) 
											(ifThen 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord WRITE-LINE)))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord FAIL-ROUTINE))) THRU 
															(procedureName 
																(paragraphName 
																	(cobolWord FAIL-ROUTINE-EX))))))) 
											(ifElse ELSE 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord BAIL-OUT))) THRU 
															(procedureName 
																(paragraphName 
																	(cobolWord BAIL-OUT-EX))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACE))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord P-OR-F)))))))) . ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACE))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-X)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACE))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-X)))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord REC-CT))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant ZERO))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal 
																	(figurativeConstant SPACE))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord PAR-NAME))))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACE))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord HEAD-ROUTINE)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-H-1)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 2) TIMES))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-H-2A)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 2) TIMES))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-H-2B)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 3) TIMES))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-H-3)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 3) TIMES))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord COLUMN-NAMES-ROUTINE)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-C-1)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-C-2)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 2) TIMES))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord HYPHEN-LINE)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord END-ROUTINE)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord HYPHEN-LINE)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 5) TIMES))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord END-RTN-EXIT)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-E-1)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 2) TIMES))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord END-ROUTINE-1)) .\n             
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ERROR-COUNTER)))))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ERROR-HOLD))))))))) 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord INSPECT-COUNTER)))))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ERROR-HOLD))))))))) . ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord DELETE-COUNTER)))))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ERROR-HOLD))))))))) .\n            ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord PASS-COUNTER)))))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ERROR-HOLD))))))))) .\n      ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord PASS-COUNTER)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CCVS-E-4-1)))))))) .\n            ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ERROR-HOLD)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CCVS-E-4-2)))))))) .\n            ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-E-4)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CCVS-E-2-2)))))))) .\n            ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-E-2)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n        )) 
							(paragraph 
								(paragraphName 
									(cobolWord END-ROUTINE-12)) .\n             
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "TEST(S) FAILED")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ENDER-DESC)))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord ERROR-COUNTER))))))))) 
																(relationalOperator IS EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant ZERO))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "NO ")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord ERROR-TOTAL))))))))) 
											(ifElse ELSE 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord ERROR-COUNTER)))))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord ERROR-TOTAL))))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-E-2)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord END-ROUTINE-13)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord DELETE-COUNTER))))))))) 
																(relationalOperator IS EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant ZERO))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "NO ")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord ERROR-TOTAL))))))))) 
											(ifElse ELSE 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord DELETE-COUNTER)))))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord ERROR-TOTAL))))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "TEST(S) DELETED     ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ENDER-DESC)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-E-2)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n            ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord INSPECT-COUNTER))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant ZERO))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "NO ")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord ERROR-TOTAL))))))))) 
											(ifElse ELSE 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord INSPECT-COUNTER)))))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord ERROR-TOTAL))))))))))) .\n            ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "TEST(S) REQUIRE INSPECTION")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ENDER-DESC)))))))) .\n            ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-E-2)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-E-3)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord WRITE-LINE)) .\n            
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord RECORD-COUNT))))))))) .\n      ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRT-LN)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord WRT-LN)) .\n            
								(sentence 
									(statement 
										(writeStatement WRITE 
											(recordName 
												(qualifiedDataName 
													(qualifiedDataNameFormat1 
														(dataName 
															(cobolWord DUMMY-RECORD))))) 
											(writeAdvancingPhrase AFTER ADVANCING 
												(writeAdvancingLines 
													(literal 
														(numericLiteral 
															(integerLiteral 1))) LINES)))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACE))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord BLANK-LINE-PRINT)) .\n            
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRT-LN)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord FAIL-ROUTINE)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord COMPUTED-X))))))))) 
																(relationalOperator NOT EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant SPACE))))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord FAIL-ROUTINE-WRITE))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord CORRECT-X))))))))) 
																(relationalOperator NOT EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant SPACE))))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord FAIL-ROUTINE-WRITE))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ANSI-REFERENCE)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord INF-ANSI-REFERENCE)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "NO FURTHER INFORMATION, SEE PROGRAM.")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord INFO-TEXT)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord XXINFO)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 2) TIMES))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord INF-ANSI-REFERENCE)))))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL-ROUTINE-EX)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord FAIL-ROUTINE-WRITE)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord TEST-COMPUTED)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PRINT-REC)))))))) 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ANSI-REFERENCE)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COR-ANSI-REFERENCE)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord TEST-CORRECT)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PRINT-REC)))))))) 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 2) TIMES))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COR-ANSI-REFERENCE)))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord FAIL-ROUTINE-EX)) .  
								(sentence 
									(statement 
										(exitStatement EXIT)) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord BAIL-OUT)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord COMPUTED-A))))))))) 
																(relationalOperator NOT EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant SPACE))))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord BAIL-OUT-WRITE))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord CORRECT-A))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant SPACE))))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord BAIL-OUT-EX))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord BAIL-OUT-WRITE)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CORRECT-A)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord XXCORRECT)))))))) . ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord COMPUTED-A)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord XXCOMPUTED)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ANSI-REFERENCE)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord INF-ANSI-REFERENCE)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord XXINFO)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 2) TIMES))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord INF-ANSI-REFERENCE)))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord BAIL-OUT-EX)) .  
								(sentence 
									(statement 
										(exitStatement EXIT)) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord CCVS1-EXIT)) .\n            
								(sentence 
									(statement 
										(exitStatement EXIT)) .\n       )))) 
					(procedureSection 
						(procedureSectionHeader 
							(sectionName 
								(cobolWord SECT-NC243A-001)) SECTION) .\n        
						(paragraphs 
							(paragraph 
								(paragraphName 
									(cobolWord TH-17-001)) .\n       \n       ) 
							(paragraph 
								(paragraphName 
									(cobolWord BUILD-LEVEL-1)) .\n            
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord SUB-1))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord SUB-1))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(numericLiteral 
																						(integerLiteral 11)))))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord CHECK-ENTRIES))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord GRP-NAME)))))) TO 
												(identifier 
													(tableCall 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ENTRY-1)))) ( 
														(subscript 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord SUB-1))))) )))))) .\n           ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ADD-GRP))))))))) .\n       \n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord BUILD-LEVEL-2)) .\n            
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord SUB-2))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord SUB-2))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(numericLiteral 
																						(integerLiteral 11)))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal 
																	(figurativeConstant ZERO))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord SUB-2)))))))) 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal 
																	(numericLiteral 
																		(integerLiteral 01)))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord ADD-SEC)))))))) 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord BUILD-LEVEL-1))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord SUB-1)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord SEC-GRP)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord SEC-NAME)))))) TO 
												(identifier 
													(tableCall 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ENTRY-2)))) ( 
														(subscript 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord SUB-1))))) 
														(subscript 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord SUB-2))))) )))))) .\n           ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ADD-SEC))))))))) .\n       \n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord BUILD-LEVEL-3)) .\n            
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord SUB-3))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord SUB-3))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(numericLiteral 
																						(integerLiteral 11)))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal 
																	(figurativeConstant ZERO))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord SUB-3)))))))) 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal 
																	(numericLiteral 
																		(integerLiteral 01)))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord ADD-ELEM)))))))) 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord BUILD-LEVEL-2))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord SUB-1)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ELEM-GRP)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord SUB-2)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ELEM-SEC)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ELEM-NAME)))))) TO 
												(identifier 
													(tableCall 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ENTRY-3)))) ( 
														(subscript 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord SUB-1))))) 
														(subscript 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord SUB-2))))) 
														(subscript 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord SUB-3))))) )))))) .\n           ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ADD-ELEM))))))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord BUILD-LEVEL-3)))))) .\n       \n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord CHECK-ENTRIES)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PERFORM VARYING LEV1")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord FEATURE)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "CHECK-ENTRIES       ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-CHECK)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "GRP05")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord GRP-HOLD-AREA)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FIND-LEVEL-1-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord IDX-1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord IDX-1))))))))) 
																						(relationalOperator GREATER) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 10)))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord TEST-CHECK))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "PASS")))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord LEVEL-1-TEST-2))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord GRP-HOLD-AREA)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-A)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(tableCall 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord ENTRY-1)))) ( 
															(subscript 
																(integerLiteral 05)) )))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-A)))))))) .\n       \n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PERFORM VARYING USING INDEX")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL-TH)))))) .\n       \n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord LEVEL-1-TEST-2)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "GRP10")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord GRP-HOLD-AREA)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "LEVEL-1-TEST-2      ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-CHECK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FIND-LEVEL-1-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord IDX-1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord IDX-1))))))))) 
																						(relationalOperator GREATER) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 10)))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord TEST-CHECK))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "PASS")))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord LEVEL-1-TEST-3))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord GRP-HOLD-AREA)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-A)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(tableCall 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord ENTRY-1)))) ( 
															(subscript 
																(integerLiteral 10)) )))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-A)))))))) .\n       \n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PERFORM VARYING USING INDEX")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL-TH)))))) .\n       \n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord LEVEL-1-TEST-3)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "GRP07")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord GRP-HOLD-AREA)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "LEVEL-1-TEST-3      ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-CHECK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FIND-LEVEL-1-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord IDX-1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord IDX-1))))))))) 
																						(relationalOperator GREATER) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 10)))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord TEST-CHECK))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "PASS")))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord LEVEL-1-TEST-4))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord GRP-HOLD-AREA)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-A)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(tableCall 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord ENTRY-1)))) ( 
															(subscript 
																(integerLiteral 07)) )))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-A)))))))) .\n       \n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PERFORM VARYING USING INDEX")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL-TH)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord LEVEL-1-TEST-4)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "LEVEL-1-TEST-4      ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "GRP01")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord GRP-HOLD-AREA)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FIND-LEVEL-1-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord IDX-1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord IDX-1))))))))) 
																						(relationalOperator GREATER) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 10)))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord TEST-CHECK))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "PASS")))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord LEVEL-2-TEST-1))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord GRP-HOLD-AREA)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-A)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(tableCall 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord ENTRY-1)))) ( 
															(subscript 
																(integerLiteral 01)) )))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-A)))))))) .\n       \n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PERFORM VARYING USING INDEX")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL-TH)))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord LEVEL-2-TEST-1)))))) .\n       \n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord FIND-LEVEL-1-ENTRY)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(tableCall 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord ENTRY-1)))) ( 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord IDX-1))))) ))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord GRP-HOLD-AREA)))))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "PASS")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord TEST-CHECK)))))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PASS-TH))))))))) .\n       \n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord LEVEL-2-TEST-1)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "LEVEL-2-TEST-1      ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PERFORM VARYING LEV2")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord FEATURE)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "SEC (03,05)")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord SEC-HOLD-AREA)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-CHECK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FIND-LEVEL-2-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord IDX-1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord IDX-1))))))))) 
																						(relationalOperator GREATER) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 10)))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord IDX-2))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord IDX-2))))))))) 
																							(relationalOperator =) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 10))))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord TEST-CHECK))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "PASS")))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord LEVEL-2-TEST-2))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord SEC-HOLD-AREA)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-A)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(tableCall 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord ENTRY-2)))) ( 
															(subscript 
																(integerLiteral 03)) 
															(subscript 
																(integerLiteral 05)) )))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-A)))))))) .\n       \n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PERFORM VARYING USING INDEX")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL-TH)))))) .\n       \n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord LEVEL-2-TEST-2)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "LEVEL-2-TEST-2      ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-CHECK)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "SEC (01,01)")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord SEC-HOLD-AREA)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FIND-LEVEL-2-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord IDX-1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord IDX-1))))))))) 
																						(relationalOperator GREATER) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 10)))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord IDX-2))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord IDX-2))))))))) 
																							(relationalOperator =) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 10))))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord TEST-CHECK))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "PASS")))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord LEVEL-2-TEST-3))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord SEC-HOLD-AREA)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-A)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(tableCall 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord ENTRY-2)))) ( 
															(subscript 
																(integerLiteral 01)) 
															(subscript 
																(integerLiteral 01)) )))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-A)))))))) .\n       \n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PERFORM VARYING USING INDEX")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL-TH)))))) .\n       \n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord LEVEL-2-TEST-3)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "LEVEL-2-TEST-3      ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-CHECK)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "SEC (10,01)")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord SEC-HOLD-AREA)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FIND-LEVEL-2-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord IDX-1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord IDX-1))))))))) 
																						(relationalOperator GREATER) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 10)))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord IDX-2))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord IDX-2))))))))) 
																							(relationalOperator =) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 10))))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord TEST-CHECK))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "PASS")))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord LEVEL-2-TEST-4))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord SEC-HOLD-AREA)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-A)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(tableCall 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord ENTRY-2)))) ( 
															(subscript 
																(integerLiteral 10)) 
															(subscript 
																(integerLiteral 01)) )))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-A)))))))) .\n       \n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PERFORM VARYING USING INDEX")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL-TH)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord LEVEL-2-TEST-4)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "LEVEL-2-TEST-4      ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-CHECK)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-CHECK)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "SEC (10,10)")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord SEC-HOLD-AREA)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FIND-LEVEL-2-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord IDX-1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 2)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 2)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord IDX-1))))))))) 
																						(relationalOperator GREATER) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 10)))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord IDX-2))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 2)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 2)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord IDX-2))))))))) 
																							(relationalOperator GREATER) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 10))))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord TEST-CHECK))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "PASS")))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord LEVEL-3-TEST-1))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord SEC-HOLD-AREA)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-A)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(tableCall 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord ENTRY-2)))) ( 
															(subscript 
																(integerLiteral 10)) 
															(subscript 
																(integerLiteral 10)) )))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-A)))))))) .\n       \n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PERFORM VARYING USING INDEX")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL-TH)))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord LEVEL-3-TEST-1)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord FIND-LEVEL-2-ENTRY)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(tableCall 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord ENTRY-2)))) ( 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord IDX-1))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord IDX-2))))) ))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord SEC-HOLD-AREA)))))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "PASS")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord TEST-CHECK)))))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PASS-TH))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord LEVEL-3-TEST-1)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PERFORM VARYING LEV3")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord FEATURE)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-CHECK)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "LEVEL-3-TEST-1      ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "ELEM (01,02,03)")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ELEM-HOLD-AREA)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FIND-LEVEL-3-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord IDX-1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord IDX-1))))))))) 
																						(relationalOperator GREATER) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 10)))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord IDX-2))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord IDX-2))))))))) 
																							(relationalOperator =) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 10))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord IDX-3))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord IDX-3))))))))) 
																							(relationalOperator =) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 10))))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord TEST-CHECK))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "PASS")))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord LEVEL-3-TEST-2))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ELEM-HOLD-AREA)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-A)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(tableCall 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord ENTRY-3)))) ( 
															(subscript 
																(integerLiteral 01)) 
															(subscript 
																(integerLiteral 02)) 
															(subscript 
																(integerLiteral 03)) )))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-A)))))))) .\n       \n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PERFORM VARYING USING INDEX")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL-TH)))))) .\n       \n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord LEVEL-3-TEST-2)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "LEVEL-3-TEST-2      ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "ELEM (10,10,10)")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ELEM-HOLD-AREA)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-CHECK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FIND-LEVEL-3-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord IDX-1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord IDX-1))))))))) 
																						(relationalOperator GREATER) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 10)))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord IDX-2))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord IDX-2))))))))) 
																							(relationalOperator GREATER) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 10))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord IDX-3))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord IDX-3))))))))) 
																							(relationalOperator GREATER) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 10))))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord TEST-CHECK))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "PASS")))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord LEVEL-3-TEST-3))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ELEM-HOLD-AREA)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-A)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(tableCall 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord ENTRY-3)))) ( 
															(subscript 
																(integerLiteral 10)) 
															(subscript 
																(integerLiteral 10)) 
															(subscript 
																(integerLiteral 10)) )))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-A)))))))) .\n       \n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PERFORM VARYING USING INDEX")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL-TH)))))) .\n       \n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord LEVEL-3-TEST-3)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "LEVEL-3-TEST-3      ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "ELEM (08,07,06)")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ELEM-HOLD-AREA)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-CHECK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FIND-LEVEL-3-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord IDX-1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord IDX-1))))))))) 
																						(relationalOperator GREATER) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 10)))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord IDX-2))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord IDX-2))))))))) 
																							(relationalOperator =) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 10))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord IDX-3))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord IDX-3))))))))) 
																							(relationalOperator =) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 10))))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord TEST-CHECK))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "PASS")))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord LEVEL-3-TEST-4))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ELEM-HOLD-AREA)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-A)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(tableCall 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord ENTRY-3)))) ( 
															(subscript 
																(integerLiteral 08)) 
															(subscript 
																(integerLiteral 07)) 
															(subscript 
																(integerLiteral 06)) )))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-A)))))))) .\n       \n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PERFORM VARYING USING INDEX")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL-TH)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord LEVEL-3-TEST-4)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "LEVEL-3-TEST-4      ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-CHECK)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "ELEM (06,04,08)")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ELEM-HOLD-AREA)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FIND-LEVEL-3-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord IDX-1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 3)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 3)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord IDX-1))))))))) 
																						(relationalOperator GREATER) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 10)))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord IDX-2))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 2)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 2)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord IDX-2))))))))) 
																							(relationalOperator GREATER) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 10))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord IDX-3))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 8)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 8)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord IDX-3))))))))) 
																							(relationalOperator GREATER) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 10))))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord TEST-CHECK))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "PASS")))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord END-3LEVEL-TEST))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ELEM-HOLD-AREA)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-A)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(tableCall 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord ENTRY-3)))) ( 
															(subscript 
																(integerLiteral 06)) 
															(subscript 
																(integerLiteral 04)) 
															(subscript 
																(integerLiteral 08)) )))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-A)))))))) .\n       \n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PERFORM VARYING USING INDEX")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL-TH)))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord END-3LEVEL-TEST)))))) .\n       \n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord FIND-LEVEL-3-ENTRY)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(tableCall 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord ENTRY-3)))) ( 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord IDX-1))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord IDX-2))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord IDX-3))))) ))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord ELEM-HOLD-AREA)))))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "PASS")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord TEST-CHECK)))))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PASS-TH))))))))) .\n       \n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord PASS-TH)) .\n            
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord PASS)))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord PRINT-DETAIL)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord FAIL-TH)) .\n            
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL)))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord PRINT-DETAIL)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord END-3LEVEL-TEST)) .\n            
								(sentence 
									(statement 
										(exitStatement EXIT)) .\n      )) 
							(paragraph 
								(paragraphName 
									(cobolWord TH7-INIT-1)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "TH7-TEST")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "VI-2 1.3.4")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ANSI-REFERENCE)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE ALL 
											(moveToStatement 
												(moveToSendingArea 
													(literal "ABCDEFGHIJKLMNOPQRSTUVWXYZ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord 7-DIMENSION-TBL)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "KL")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord L4-HOLD)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "AB")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord L5-HOLD)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "CD")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord L6-HOLD)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "GH")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord L7-HOLD)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord WS-FLAG)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord REC-CT)))))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord TH7-TEST-1-0)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TH7-DELETE-1)) .\n            
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord DE-LETE)))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord PRINT-DETAIL)))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord CCVS-EXIT)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TH7-TEST-1-0)) .\n            
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord TH7-FIND-LEVEL-4-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord X1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord X1))))))))) 
																						(relationalOperator >) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 2)))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X2))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X2))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X3))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X3))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X4))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X4))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord TH7-TEST-1-1)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TH7-FIND-LEVEL-4-ENTRY)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(tableCall 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord ENTRY-7-4)))) ( 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X1))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X2))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X3))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X4))))) ))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord L4-HOLD)))))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "FOUND")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord WS-FLAG))))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TH7-TEST-1-1)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord WS-FLAG))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "FOUND")))))))))) 
											(ifThen 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PASS)))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PRINT-DETAIL))))))) 
											(ifElse ELSE 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "TABLE NOT CORRECT AT 4TH LEVEL")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord RE-MARK)))))))) 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(tableCall 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord ENTRY-7-4)))) ( 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X1))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X2))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X3))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X4))))) )))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord COMPUTED-X)))))))) 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord L4-HOLD)))))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord CORRECT-X)))))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord FAIL)))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PRINT-DETAIL))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord WS-FLAG)))))))) .\n           ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord REC-CT))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TH7-TEST-2-0)) .\n            
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord TH7-FIND-LEVEL-5-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord X1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord X1))))))))) 
																						(relationalOperator >) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 2)))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X2))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X2))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X3))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X3))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X4))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X4))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X5))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X5))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord TH7-TEST-2-1)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TH7-FIND-LEVEL-5-ENTRY)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(tableCall 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord ENTRY-7-5)))) ( 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X1))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X2))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X3))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X4))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X5))))) ))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord L5-HOLD)))))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "FOUND")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord WS-FLAG))))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TH7-TEST-2-1)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord WS-FLAG))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "FOUND")))))))))) 
											(ifThen 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PASS)))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PRINT-DETAIL))))))) 
											(ifElse ELSE 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "TABLE NOT CORRECT AT 5TH LEVEL")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord RE-MARK)))))))) 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(tableCall 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord ENTRY-7-5)))) ( 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X1))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X2))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X3))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X4))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X5))))) )))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord COMPUTED-X)))))))) 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord L5-HOLD)))))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord CORRECT-X)))))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord FAIL)))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PRINT-DETAIL))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord WS-FLAG)))))))) .\n           ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord REC-CT))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TH7-TEST-3-0)) .\n            
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord TH7-FIND-LEVEL-6-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord X1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord X1))))))))) 
																						(relationalOperator >) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 2)))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X2))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X2))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X3))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X3))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X4))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X4))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X5))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X5))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X6))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X6))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord TH7-TEST-3-1)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TH7-FIND-LEVEL-6-ENTRY)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(tableCall 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord ENTRY-7-6)))) ( 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X1))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X2))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X3))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X4))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X5))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X6))))) ))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord L6-HOLD)))))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "FOUND")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord WS-FLAG))))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TH7-TEST-3-1)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord WS-FLAG))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "FOUND")))))))))) 
											(ifThen 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PASS)))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PRINT-DETAIL))))))) 
											(ifElse ELSE 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "TABLE NOT CORRECT AT 6TH LEVEL")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord RE-MARK)))))))) 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(tableCall 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord ENTRY-7-6)))) ( 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X1))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X2))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X3))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X4))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X5))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X6))))) )))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord COMPUTED-X)))))))) 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord L6-HOLD)))))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord CORRECT-X)))))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord FAIL)))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PRINT-DETAIL))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord WS-FLAG)))))))) .\n           ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord REC-CT))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TH7-TEST-4-0)) .\n            
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord TH7-FIND-LEVEL-7-ENTRY))) 
												(performType 
													(performVarying 
														(performVaryingClause VARYING 
															(performVaryingPhrase 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord X1))))) 
																(performFrom FROM 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performBy BY 
																	(literal 
																		(numericLiteral 
																			(integerLiteral 1)))) 
																(performUntil UNTIL 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord X1))))))))) 
																						(relationalOperator >) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 2)))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X2))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X2))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X3))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X3))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X4))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X4))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X5))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X5))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X6))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X6))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))) 
															(performAfter AFTER 
																(performVaryingPhrase 
																	(identifier 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord X7))))) 
																	(performFrom FROM 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performBy BY 
																		(literal 
																			(numericLiteral 
																				(integerLiteral 1)))) 
																	(performUntil UNTIL 
																		(condition 
																			(combinableCondition 
																				(simpleCondition 
																					(relationCondition 
																						(relationArithmeticComparison 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord X7))))))))) 
																							(relationalOperator >) 
																							(arithmeticExpression 
																								(multDivs 
																									(powers 
																										(basis 
																											(literal 
																												(numericLiteral 
																													(integerLiteral 2))))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord TH7-TEST-4-1)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TH7-FIND-LEVEL-7-ENTRY)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(tableCall 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord ENTRY-7-7)))) ( 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X1))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X2))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X3))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X4))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X5))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X6))))) 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord X7))))) ))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord L7-HOLD)))))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "FOUND")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord WS-FLAG))))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TH7-TEST-4-1)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord WS-FLAG))))))))) 
																(relationalOperator =) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "FOUND")))))))))) 
											(ifThen 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PASS)))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PRINT-DETAIL))))))) 
											(ifElse ELSE 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "TABLE NOT CORRECT AT 6TH LEVEL")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord RE-MARK)))))))) 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(tableCall 
																		(qualifiedDataName 
																			(qualifiedDataNameFormat1 
																				(dataName 
																					(cobolWord ENTRY-7-7)))) ( 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X1))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X2))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X3))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X4))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X5))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X6))))) 
																		(subscript 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord X7))))) )))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord COMPUTED-X)))))))) 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord L7-HOLD)))))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord CORRECT-X)))))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord FAIL)))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PRINT-DETAIL))))))))) .\n      )))) 
					(procedureSection 
						(procedureSectionHeader 
							(sectionName 
								(cobolWord CCVS-EXIT)) SECTION) .\n        
						(paragraphs 
							(paragraph 
								(paragraphName 
									(cobolWord CCVS-999999)) .\n            
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord CLOSE-FILES)))))) .\n      )))))))) <EOF>)