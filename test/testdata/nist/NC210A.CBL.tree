(startRule 
	(compilationUnit 
		(programUnit 
			(identificationDivision IDENTIFICATION DIVISION .\n        
				(programIdParagraph PROGRAM-ID .\n            
					(programName 
						(cobolWord NC210A)) .\n      )) 
			(environmentDivision ENVIRONMENT DIVISION .\n        
				(environmentDivisionBody 
					(configurationSection CONFIGURATION SECTION .\n        
						(configurationSectionParagraph 
							(sourceComputerParagraph SOURCE-COMPUTER .\n            
								(computerName 
									(systemName 
										(cobolWord XXXXX082))) .\n       )) 
						(configurationSectionParagraph 
							(objectComputerParagraph OBJECT-COMPUTER .\n            
								(computerName 
									(systemName 
										(cobolWord XXXXX083))) .\n       )))) 
				(environmentDivisionBody 
					(inputOutputSection INPUT-OUTPUT SECTION .\n        
						(inputOutputSectionParagraph 
							(fileControlParagraph FILE-CONTROL .\n            
								(fileControlEntry 
									(selectClause SELECT 
										(fileName 
											(cobolWord PRINT-FILE))) 
									(fileControlClause 
										(assignClause ASSIGN TO 
											(assignmentName 
												(systemName 
													(cobolWord XXXXX055)))))) .\n       ))))) 
			(dataDivision DATA DIVISION .\n        
				(dataDivisionSection 
					(fileSection FILE SECTION .\n        
						(fileDescriptionEntry FD 
							(fileName 
								(cobolWord PRINT-FILE)) .\n        
							(dataDescriptionEntry 
								(dataDescriptionEntryFormat1 01 
									(dataName 
										(cobolWord PRINT-REC)) 
									(dataPictureClause PICTURE 
										(pictureString 
											(pictureChars X) 
											(pictureChars () 
											(pictureChars 
												(integerLiteral 120)) 
											(pictureChars )))) .\n       )) 
							(dataDescriptionEntry 
								(dataDescriptionEntryFormat1 01 
									(dataName 
										(cobolWord DUMMY-RECORD)) 
									(dataPictureClause PICTURE 
										(pictureString 
											(pictureChars X) 
											(pictureChars () 
											(pictureChars 
												(integerLiteral 120)) 
											(pictureChars )))) .\n       ))))) 
				(dataDivisionSection 
					(workingStorageSection WORKING-STORAGE SECTION .\n        
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord ACCUM-DATANAME)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord DATANAME-A)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 0)))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord DATANAME-B)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 0)))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord DATANAME-C)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 0)))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord DATANAME-D)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 0)))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord DATANAME-E)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 0)))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord DATANAME-F)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 0)))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 77 
								(dataName 
									(cobolWord SUB-SCRIPT)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 01)))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord DATA-NAMES)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord ONE-A)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 0)))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord ONE-B)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 0)))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord ONE-C)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 0)))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord ONE-D)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 0)))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord ONE-E)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 0)))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord ONE-F)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 0)))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord ONE-X)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord DATA-NAMES))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 6)) 
										(pictureChars )))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord BUILT-TABLE)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord A-POS)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XX))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord B-POS)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XX))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord C-POS)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XX))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord D-POS)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XXX))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord E-POS)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XXX))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord F-POS)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XXX))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord PARAGRAPH-NAME)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 11)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "IF-TEST-GF-")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord PAR-NUMBER)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(numericLiteral 
													(integerLiteral 00)))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord COMPARISON-TABLE)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C1D01E01F01")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C1D01E01F02")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C1D01E02F03")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C1D01E02F04")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C1D02E03F05")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C1D02E03F06")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C1D02E04F07")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C1D02E04F08")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C2D03E05F09")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C2D03E05F10")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C2D03E06F11")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C2D03E06F12")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C2D04E07F13")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C2D04E07F14")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C2D04E08F15")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B1C2D04E08F16")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C3D05E09F17")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C3D05E09F18")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C3D05E10F19")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C3D05E10F20")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C3D06E11F21")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C3D06E11F22")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C3D06E12F23")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C3D06E12F24")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C4D07E13F25")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C4D07E13F26")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C4D07E14F27")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C4D07E14F28")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C4D08E15F29")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C4D08E15F30")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C4D08E16F31")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A1B2C4D08E16F32")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C5D09E17F33")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C5D09E17F34")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C5D09E18F35")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C5D09E18F36")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C5D10E19F37")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C5D10E19F38")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C5D10E20F39")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C5D10E20F40")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C6D11E21F41")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C6D11E21F42")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C6D11E22F43")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C6D11E22F44")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C6D12E23F45")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C6D12E23F46")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C6D12E24F47")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B3C6D12E24F48")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C7D13E25F49")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C7D13E25F50")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C7D13E26F51")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C7D13E26F52")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C7D14E27F53")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C7D14E27F54")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C7D14E28F55")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C7D14E28F56")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C8D15E29F57")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C8D15E29F58")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C8D15E30F59")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C8D15E30F60")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C8D16E31F61")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C8D16E31F62")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C8D16E32F63")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "A2B4C8D16E32F64")))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord COMP-TBL)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord COMPARISON-TABLE))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord CORRECT-ENTRY)) 
								(dataOccursClause OCCURS 
									(integerLiteral 64) TIMES) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord T-F)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 5)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "FALSE")))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CHECK-PARA)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 21)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "VALUE OF DATANAME AT ")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord CHECK-VALU)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACES))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord TEST-RESULTS)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord FEATURE)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 20)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord P-OR-F)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 5)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord PAR-NAME)) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 19)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord PARDOT-X)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord DOTVALUE)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 8)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord RE-MARK)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 61)) 
										(pictureChars )))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord TEST-COMPUTED)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 30)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 17)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "       COMPUTED=")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord COMPUTED-X)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord COMPUTED-A)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 20)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord COMPUTED-N)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord COMPUTED-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars )) 
										(pictureChars .9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord COMPUTED-0V18)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord COMPUTED-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars -.9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 18)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord COMPUTED-4V14)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord COMPUTED-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )) 
										(pictureChars .9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 14)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord COMPUTED-14V4)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord COMPUTED-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 14)) 
										(pictureChars )) 
										(pictureChars .9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord CM-18V0)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord COMPUTED-A))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 
								(dataName 
									(cobolWord COMPUTED-18V0)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 18)) 
										(pictureChars )))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 50)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord TEST-CORRECT)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 30)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 17)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "       CORRECT =")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord CORRECT-X)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord CORRECT-A)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 20)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord CORRECT-N)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord CORRECT-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars )) 
										(pictureChars .9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord CORRECT-0V18)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord CORRECT-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars -.9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 18)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord CORRECT-4V14)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord CORRECT-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )) 
										(pictureChars .9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 14)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord CORRECT-14V4)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord CORRECT-A))) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 14)) 
										(pictureChars )) 
										(pictureChars .9) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord CR-18V0)) 
								(dataRedefinesClause REDEFINES 
									(dataName 
										(cobolWord CORRECT-A))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 
								(dataName 
									(cobolWord CORRECT-18V0)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral -9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 18)) 
										(pictureChars )))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 2)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord COR-ANSI-REFERENCE)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 48)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-C-1)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC IS 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 99)) 
										(pictureChars )))) 
								(dataValueClause VALUE IS 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " FEATURE              PASS  PARAGRAPH-NAME                                                 REMARKS")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 20)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-C-2)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 6)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "TESTED")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "FAIL")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 94)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord REC-SKL-SUB)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 2)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord REC-CT)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 99)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord DELETE-COUNTER)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 999)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord ERROR-COUNTER)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 999)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord INSPECT-COUNTER)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 999)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord PASS-COUNTER)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 999)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord TOTAL-ERROR)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 999)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord ERROR-HOLD)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 999)))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord DUMMY-HOLD)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 120)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord RECORD-COUNT)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 5)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant ZERO))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord ANSI-REFERENCE)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 48)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACES))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-H-1)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 39)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACES))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 42)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "OFFICIAL COBOL COMPILER VALIDATION SYSTEM")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 39)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACES))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-H-2A)) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 40)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 7)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "CCVS85 ")))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XXXX))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "4.2 ")))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 28)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " COPY - NOT FOR DISTRIBUTION")))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 41)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n       \n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-H-2B)) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "TEST RESULT OF ")))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord TEST-ID)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars )))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " IN ")))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 12)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " HIGH       ")))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 22)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " LEVEL VALIDATION FOR ")))) .\n         )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 58)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "ON-SITE VALIDATION, NATIONAL INSTITUTE OF STD & TECH.     ")))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-H-3)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 34)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " FOR OFFICIAL USE ONLY    ")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 58)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "COBOL 85 VERSION 4.2, Apr  1993 SSVG                      ")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 28)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "  COPYRIGHT   1985 ")))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-E-1)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 52)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 14)) 
										(pictureChars )))) 
								(dataValueClause VALUE IS 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "END OF TEST-  ")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord ID-AGAIN)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 45)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACES))))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-E-2)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 31)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 21)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord CCVS-E-2-2)) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord ERROR-TOTAL)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XXX))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n               )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 03 
								(dataName 
									(cobolWord ENDER-DESC)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 44)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "ERRORS ENCOUNTERED")))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-E-3)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 22)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " FOR OFFICIAL USE ONLY")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 12)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 58)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "ON-SITE VALIDATION, NATIONAL INSTITUTE OF STD & TECH.     ")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 13)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 15)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " COPYRIGHT 1985")))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-E-4)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord CCVS-E-4-1)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XXX))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 4)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal " OF ")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord CCVS-E-4-2)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars XXX))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 40)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "  TESTS WERE EXECUTED SUCCESSFULLY")))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord XXINFO)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 19)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "*** INFORMATION ***")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord INFO-TEXT)) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 8)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 
								(dataName 
									(cobolWord XXCOMPUTED)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 20)) 
										(pictureChars )))) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 FILLER 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 5)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n             )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 04 
								(dataName 
									(cobolWord XXCORRECT)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 20)) 
										(pictureChars )))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 
								(dataName 
									(cobolWord INF-ANSI-REFERENCE)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 48)) 
										(pictureChars )))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord HYPHEN-LINE)) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC IS 
									(pictureString 
										(pictureChars X))) 
								(dataValueClause VALUE IS 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal 
												(figurativeConstant SPACE))))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC IS 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 65)) 
										(pictureChars )))) 
								(dataValueClause VALUE IS 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "*****************************************************************")))) .\n           )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 02 FILLER 
								(dataPictureClause PIC IS 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 54)) 
										(pictureChars )))) 
								(dataValueClause VALUE IS 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "******************************************************")))) .\n       )) 
						(dataDescriptionEntry 
							(dataDescriptionEntryFormat1 01 
								(dataName 
									(cobolWord CCVS-PGM-ID)) 
								(dataPictureClause PIC 
									(pictureString 
										(pictureChars X) 
										(pictureChars () 
										(pictureChars 
											(integerLiteral 9)) 
										(pictureChars )))) 
								(dataValueClause VALUE 
									(dataValueInterval 
										(dataValueIntervalFrom 
											(literal "NC210A")))) .\n       ))))) 
			(procedureDivision PROCEDURE DIVISION .\n        
				(procedureDivisionBody paragraphs 
					(procedureSection 
						(procedureSectionHeader 
							(sectionName 
								(cobolWord CCVS1)) SECTION) .\n        
						(paragraphs 
							(paragraph 
								(paragraphName 
									(cobolWord OPEN-FILES)) .\n            
								(sentence 
									(statement 
										(openStatement OPEN 
											(openOutputStatement OUTPUT 
												(openOutput 
													(fileName 
														(cobolWord PRINT-FILE)))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-PGM-ID)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-ID)))))))) . ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-PGM-ID)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ID-AGAIN)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACE))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord TEST-RESULTS)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord HEAD-ROUTINE))) THRU 
												(procedureName 
													(paragraphName 
														(cobolWord COLUMN-NAMES-ROUTINE)))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord CCVS1-EXIT)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord CLOSE-FILES)) .\n            
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord END-ROUTINE))) THRU 
												(procedureName 
													(paragraphName 
														(cobolWord END-ROUTINE-13)))))) . ) 
								(sentence 
									(statement 
										(closeStatement CLOSE 
											(closeFile 
												(fileName 
													(cobolWord PRINT-FILE))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TERMINATE-CCVS)) .\n            
								(sentence 
									(statement 
										(stopStatement STOP RUN)) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord INSPT)) .  
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "INSPT")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord P-OR-F)))))))) . ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord INSPECT-COUNTER))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord PASS)) .   
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "PASS ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord P-OR-F)))))))) .  ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord PASS-COUNTER))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord FAIL)) .   
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "FAIL*")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord P-OR-F)))))))) .  ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ERROR-COUNTER))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord DE-LETE)) .   
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "*****")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord P-OR-F)))))))) .  ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord DELETE-COUNTER))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "****TEST DELETED****")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord PRINT-DETAIL)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord REC-CT))))))))) 
																(relationalOperator NOT EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant ZERO))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal ".")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord PARDOT-X)))))))) 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord REC-CT)))))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord DOTVALUE))))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord TEST-RESULTS)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PRINT-REC)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord P-OR-F))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal "FAIL*")))))))))) 
											(ifThen 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord WRITE-LINE)))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord FAIL-ROUTINE))) THRU 
															(procedureName 
																(paragraphName 
																	(cobolWord FAIL-ROUTINE-EX))))))) 
											(ifElse ELSE 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord BAIL-OUT))) THRU 
															(procedureName 
																(paragraphName 
																	(cobolWord BAIL-OUT-EX))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACE))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord P-OR-F)))))))) . ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACE))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-X)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACE))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-X)))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord REC-CT))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant ZERO))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal 
																	(figurativeConstant SPACE))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord PAR-NAME))))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACE))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord HEAD-ROUTINE)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-H-1)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 2) TIMES))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-H-2A)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 2) TIMES))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-H-2B)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 3) TIMES))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-H-3)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 3) TIMES))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord COLUMN-NAMES-ROUTINE)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-C-1)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-C-2)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 2) TIMES))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord HYPHEN-LINE)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord END-ROUTINE)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord HYPHEN-LINE)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 5) TIMES))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord END-RTN-EXIT)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-E-1)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 2) TIMES))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord END-ROUTINE-1)) .\n             
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ERROR-COUNTER)))))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ERROR-HOLD))))))))) 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord INSPECT-COUNTER)))))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ERROR-HOLD))))))))) . ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord DELETE-COUNTER)))))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ERROR-HOLD))))))))) .\n            ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord PASS-COUNTER)))))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ERROR-HOLD))))))))) .\n      ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord PASS-COUNTER)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CCVS-E-4-1)))))))) .\n            ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ERROR-HOLD)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CCVS-E-4-2)))))))) .\n            ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-E-4)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CCVS-E-2-2)))))))) .\n            ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-E-2)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n        )) 
							(paragraph 
								(paragraphName 
									(cobolWord END-ROUTINE-12)) .\n             
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "TEST(S) FAILED")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ENDER-DESC)))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord ERROR-COUNTER))))))))) 
																(relationalOperator IS EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant ZERO))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "NO ")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord ERROR-TOTAL))))))))) 
											(ifElse ELSE 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord ERROR-COUNTER)))))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord ERROR-TOTAL))))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-E-2)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord END-ROUTINE-13)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord DELETE-COUNTER))))))))) 
																(relationalOperator IS EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant ZERO))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "NO ")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord ERROR-TOTAL))))))))) 
											(ifElse ELSE 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord DELETE-COUNTER)))))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord ERROR-TOTAL))))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "TEST(S) DELETED     ")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ENDER-DESC)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-E-2)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n            ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord INSPECT-COUNTER))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant ZERO))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "NO ")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord ERROR-TOTAL))))))))) 
											(ifElse ELSE 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord INSPECT-COUNTER)))))) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord ERROR-TOTAL))))))))))) .\n            ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "TEST(S) REQUIRE INSPECTION")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ENDER-DESC)))))))) .\n            ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-E-2)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CCVS-E-3)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord WRITE-LINE)) .\n            
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord RECORD-COUNT))))))))) .\n      ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRT-LN)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord WRT-LN)) .\n            
								(sentence 
									(statement 
										(writeStatement WRITE 
											(recordName 
												(qualifiedDataName 
													(qualifiedDataNameFormat1 
														(dataName 
															(cobolWord DUMMY-RECORD))))) 
											(writeAdvancingPhrase AFTER ADVANCING 
												(writeAdvancingLines 
													(literal 
														(numericLiteral 
															(integerLiteral 1))) LINES)))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACE))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord BLANK-LINE-PRINT)) .\n            
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRT-LN)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord FAIL-ROUTINE)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord COMPUTED-X))))))))) 
																(relationalOperator NOT EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant SPACE))))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord FAIL-ROUTINE-WRITE))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord CORRECT-X))))))))) 
																(relationalOperator NOT EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant SPACE))))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord FAIL-ROUTINE-WRITE))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ANSI-REFERENCE)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord INF-ANSI-REFERENCE)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "NO FURTHER INFORMATION, SEE PROGRAM.")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord INFO-TEXT)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord XXINFO)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 2) TIMES))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord INF-ANSI-REFERENCE)))))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL-ROUTINE-EX)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord FAIL-ROUTINE-WRITE)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord TEST-COMPUTED)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PRINT-REC)))))))) 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE)))))) 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ANSI-REFERENCE)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COR-ANSI-REFERENCE)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord TEST-CORRECT)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PRINT-REC)))))))) 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 2) TIMES))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COR-ANSI-REFERENCE)))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord FAIL-ROUTINE-EX)) .  
								(sentence 
									(statement 
										(exitStatement EXIT)) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord BAIL-OUT)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord COMPUTED-A))))))))) 
																(relationalOperator NOT EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant SPACE))))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord BAIL-OUT-WRITE))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord CORRECT-A))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(figurativeConstant SPACE))))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord BAIL-OUT-EX))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord BAIL-OUT-WRITE)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CORRECT-A)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord XXCORRECT)))))))) . ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord COMPUTED-A)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord XXCOMPUTED)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ANSI-REFERENCE)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord INF-ANSI-REFERENCE)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord XXINFO)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord DUMMY-RECORD)))))))) . ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord WRITE-LINE))) 
												(performType 
													(performTimes 
														(integerLiteral 2) TIMES))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord INF-ANSI-REFERENCE)))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord BAIL-OUT-EX)) .  
								(sentence 
									(statement 
										(exitStatement EXIT)) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord CCVS1-EXIT)) .\n            
								(sentence 
									(statement 
										(exitStatement EXIT)) .\n       )))) 
					(procedureSection 
						(procedureSectionHeader 
							(sectionName 
								(cobolWord SECT-NC210A-001)) SECTION) .\n        
						(paragraphs 
							(paragraph 
								(paragraphName 
									(cobolWord IF-INIT-GF-X)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "VI-89 6.15.4 GR1(C)")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ANSI-REFERENCE)))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord IF-TEST-GF-X)) .\n            
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord DATANAME-A))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord ONE-A)))))))))))))) 
											(ifThen 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "A1")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord A-POS)))))))) 
												(statement 
													(ifStatement IF 
														(condition 
															(combinableCondition 
																(simpleCondition 
																	(relationCondition 
																		(relationArithmeticComparison 
																			(arithmeticExpression 
																				(multDivs 
																					(powers 
																						(basis 
																							(identifier 
																								(qualifiedDataName 
																									(qualifiedDataNameFormat1 
																										(dataName 
																											(cobolWord DATANAME-B))))))))) 
																			(relationalOperator EQUAL TO) 
																			(arithmeticExpression 
																				(multDivs 
																					(powers 
																						(basis 
																							(identifier 
																								(qualifiedDataName 
																									(qualifiedDataNameFormat1 
																										(dataName 
																											(cobolWord ONE-B)))))))))))))) 
														(ifThen 
															(statement 
																(moveStatement MOVE 
																	(moveToStatement 
																		(moveToSendingArea 
																			(literal "B1")) TO 
																		(identifier 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord B-POS)))))))) 
															(statement 
																(ifStatement IF 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord DATANAME-C))))))))) 
																						(relationalOperator EQUAL TO) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord ONE-C)))))))))))))) 
																	(ifThen 
																		(statement 
																			(moveStatement MOVE 
																				(moveToStatement 
																					(moveToSendingArea 
																						(literal "C1")) TO 
																					(identifier 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord C-POS)))))))) 
																		(statement 
																			(ifStatement IF 
																				(condition 
																					(combinableCondition 
																						(simpleCondition 
																							(relationCondition 
																								(relationArithmeticComparison 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord DATANAME-D))))))))) 
																									(relationalOperator EQUAL TO) 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord ONE-D)))))))))))))) 
																				(ifThen 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D01")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E01")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F01")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F02")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E02")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F03")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F04")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))))))))) 
																				(ifElse ELSE 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D02")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E03")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F05")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F06")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E04")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F07")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F08")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))))))))) 
																	(ifElse ELSE 
																		(statement 
																			(moveStatement MOVE 
																				(moveToStatement 
																					(moveToSendingArea 
																						(literal "C2")) TO 
																					(identifier 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord C-POS)))))))) 
																		(statement 
																			(ifStatement IF 
																				(condition 
																					(combinableCondition 
																						(simpleCondition 
																							(relationCondition 
																								(relationArithmeticComparison 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord DATANAME-D))))))))) 
																									(relationalOperator EQUAL TO) 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord ONE-D)))))))))))))) 
																				(ifThen 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D03")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E05")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F09")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F10")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E06")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F11")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F12")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))))))))) 
																				(ifElse ELSE 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D04")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E07")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F13")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F14")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E08")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F15")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F16")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))))))))))))))) 
														(ifElse ELSE 
															(statement 
																(moveStatement MOVE 
																	(moveToStatement 
																		(moveToSendingArea 
																			(literal "B2")) TO 
																		(identifier 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord B-POS)))))))) 
															(statement 
																(ifStatement IF 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord DATANAME-C))))))))) 
																						(relationalOperator EQUAL TO) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord ONE-C)))))))))))))) 
																	(ifThen 
																		(statement 
																			(moveStatement MOVE 
																				(moveToStatement 
																					(moveToSendingArea 
																						(literal "C3")) TO 
																					(identifier 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord C-POS)))))))) 
																		(statement 
																			(ifStatement IF 
																				(condition 
																					(combinableCondition 
																						(simpleCondition 
																							(relationCondition 
																								(relationArithmeticComparison 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord DATANAME-D))))))))) 
																									(relationalOperator EQUAL TO) 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord ONE-D)))))))))))))) 
																				(ifThen 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D05")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E09")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F17")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F18")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E10")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F19")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F20")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))))))))) 
																				(ifElse ELSE 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D06")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E11")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F21")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F22")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E12")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F23")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F24")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))))))))) 
																	(ifElse ELSE 
																		(statement 
																			(moveStatement MOVE 
																				(moveToStatement 
																					(moveToSendingArea 
																						(literal "C4")) TO 
																					(identifier 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord C-POS)))))))) 
																		(statement 
																			(ifStatement IF 
																				(condition 
																					(combinableCondition 
																						(simpleCondition 
																							(relationCondition 
																								(relationArithmeticComparison 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord DATANAME-D))))))))) 
																									(relationalOperator EQUAL TO) 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord ONE-D)))))))))))))) 
																				(ifThen 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D07")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E13")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F25")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F26")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E14")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F27")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F28")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))))))))) 
																				(ifElse ELSE 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D08")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E15")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F29")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F30")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E16")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F31")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F32")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))))))))))))))) 
											(ifElse ELSE 
												(statement 
													(moveStatement MOVE 
														(moveToStatement 
															(moveToSendingArea 
																(literal "A2")) TO 
															(identifier 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord A-POS)))))))) 
												(statement 
													(ifStatement IF 
														(condition 
															(combinableCondition 
																(simpleCondition 
																	(relationCondition 
																		(relationArithmeticComparison 
																			(arithmeticExpression 
																				(multDivs 
																					(powers 
																						(basis 
																							(identifier 
																								(qualifiedDataName 
																									(qualifiedDataNameFormat1 
																										(dataName 
																											(cobolWord DATANAME-B))))))))) 
																			(relationalOperator EQUAL TO) 
																			(arithmeticExpression 
																				(multDivs 
																					(powers 
																						(basis 
																							(identifier 
																								(qualifiedDataName 
																									(qualifiedDataNameFormat1 
																										(dataName 
																											(cobolWord ONE-B)))))))))))))) 
														(ifThen 
															(statement 
																(moveStatement MOVE 
																	(moveToStatement 
																		(moveToSendingArea 
																			(literal "B3")) TO 
																		(identifier 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord B-POS)))))))) 
															(statement 
																(ifStatement IF 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord DATANAME-C))))))))) 
																						(relationalOperator EQUAL TO) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord ONE-C)))))))))))))) 
																	(ifThen 
																		(statement 
																			(moveStatement MOVE 
																				(moveToStatement 
																					(moveToSendingArea 
																						(literal "C5")) TO 
																					(identifier 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord C-POS)))))))) 
																		(statement 
																			(ifStatement IF 
																				(condition 
																					(combinableCondition 
																						(simpleCondition 
																							(relationCondition 
																								(relationArithmeticComparison 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord DATANAME-D))))))))) 
																									(relationalOperator EQUAL TO) 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord ONE-D)))))))))))))) 
																				(ifThen 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D09")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E17")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F33")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F34")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E18")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F35")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F36")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))))))))) 
																				(ifElse ELSE 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D10")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E19")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F37")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F38")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E20")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F39")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F40")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))))))))) 
																	(ifElse ELSE 
																		(statement 
																			(moveStatement MOVE 
																				(moveToStatement 
																					(moveToSendingArea 
																						(literal "C6")) TO 
																					(identifier 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord C-POS)))))))) 
																		(statement 
																			(ifStatement IF 
																				(condition 
																					(combinableCondition 
																						(simpleCondition 
																							(relationCondition 
																								(relationArithmeticComparison 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord DATANAME-D))))))))) 
																									(relationalOperator EQUAL TO) 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord ONE-D)))))))))))))) 
																				(ifThen 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D11")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E21")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F41")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F42")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E22")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F43")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F44")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))))))))) 
																				(ifElse ELSE 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D12")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E23")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F45")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F46")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E24")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F47")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F48")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))))))))))))))) 
														(ifElse ELSE 
															(statement 
																(moveStatement MOVE 
																	(moveToStatement 
																		(moveToSendingArea 
																			(literal "B4")) TO 
																		(identifier 
																			(qualifiedDataName 
																				(qualifiedDataNameFormat1 
																					(dataName 
																						(cobolWord B-POS)))))))) 
															(statement 
																(ifStatement IF 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord DATANAME-C))))))))) 
																						(relationalOperator EQUAL TO) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord ONE-C)))))))))))))) 
																	(ifThen 
																		(statement 
																			(moveStatement MOVE 
																				(moveToStatement 
																					(moveToSendingArea 
																						(literal "C7")) TO 
																					(identifier 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord C-POS)))))))) 
																		(statement 
																			(ifStatement IF 
																				(condition 
																					(combinableCondition 
																						(simpleCondition 
																							(relationCondition 
																								(relationArithmeticComparison 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord DATANAME-D))))))))) 
																									(relationalOperator EQUAL TO) 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord ONE-D)))))))))))))) 
																				(ifThen 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D13")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E25")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F49")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F50")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E26")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F51")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F52")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))))))))) 
																				(ifElse ELSE 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D14")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E27")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F53")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F54")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E28")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F55")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F56")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))))))))) 
																	(ifElse ELSE 
																		(statement 
																			(moveStatement MOVE 
																				(moveToStatement 
																					(moveToSendingArea 
																						(literal "C8")) TO 
																					(identifier 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord C-POS)))))))) 
																		(statement 
																			(ifStatement IF 
																				(condition 
																					(combinableCondition 
																						(simpleCondition 
																							(relationCondition 
																								(relationArithmeticComparison 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord DATANAME-D))))))))) 
																									(relationalOperator EQUAL TO) 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord ONE-D)))))))))))))) 
																				(ifThen 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D15")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E29")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F57")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F58")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E30")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F59")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F60")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))))))))) 
																				(ifElse ELSE 
																					(statement 
																						(moveStatement MOVE 
																							(moveToStatement 
																								(moveToSendingArea 
																									(literal "D16")) TO 
																								(identifier 
																									(qualifiedDataName 
																										(qualifiedDataNameFormat1 
																											(dataName 
																												(cobolWord D-POS)))))))) 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord DATANAME-E))))))))) 
																												(relationalOperator EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ONE-E)))))))))))))) 
																							(ifThen 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E31")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F61")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F62")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))) 
																							(ifElse ELSE 
																								(statement 
																									(moveStatement MOVE 
																										(moveToStatement 
																											(moveToSendingArea 
																												(literal "E32")) TO 
																											(identifier 
																												(qualifiedDataName 
																													(qualifiedDataNameFormat1 
																														(dataName 
																															(cobolWord E-POS)))))))) 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord DATANAME-F))))))))) 
																															(relationalOperator EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ONE-F)))))))))))))) 
																										(ifThen 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F63")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS))))))))) 
																										(ifElse ELSE 
																											(statement 
																												(moveStatement MOVE 
																													(moveToStatement 
																														(moveToSendingArea 
																															(literal "F64")) TO 
																														(identifier 
																															(qualifiedDataName 
																																(qualifiedDataNameFormat1 
																																	(dataName 
																																		(cobolWord F-POS)))))))))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord BUILT-TABLE))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(tableCall 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord CORRECT-ENTRY)))) ( 
																						(subscript 
																							(qualifiedDataName 
																								(qualifiedDataNameFormat1 
																									(dataName 
																										(cobolWord SUB-SCRIPT))))) )))))))))))) 
											(ifThen 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PASS)))))) 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord IF-WRITE-GF-X))))))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord IF-FAIL-GF-X)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord IF-DELETE-GF-X)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(numericLiteral 
															(integerLiteral 63)))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NUMBER)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord DE-LETE)))))) .\n           ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 63)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord DELETE-COUNTER))))))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord IF-WRITE-GF-X)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord IF-FAIL-GF-X)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord BUILT-TABLE)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-A)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(tableCall 
															(qualifiedDataName 
																(qualifiedDataNameFormat1 
																	(dataName 
																		(cobolWord CORRECT-ENTRY)))) ( 
															(subscript 
																(qualifiedDataName 
																	(qualifiedDataNameFormat1 
																		(dataName 
																			(cobolWord SUB-SCRIPT))))) )))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-A)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord IF-WRITE-GF-X)) .\n            
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord PAR-NUMBER))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord PARAGRAPH-NAME)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord PRINT-DETAIL)))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord PAR-NUMBER))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(numericLiteral 
																						(integerLiteral 64)))))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord IF-INIT-GF-Y))))))))) .\n           ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord SUB-SCRIPT))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(figurativeConstant SPACES))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord BUILT-TABLE)))))))) .\n           ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ONE-X))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord ONE-F))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(numericLiteral 
																						(integerLiteral 2)))))))))))) 
											(ifThen 
												(statement 
													(addStatement ADD 
														(addToStatement 
															(addFrom 
																(literal 
																	(numericLiteral 
																		(integerLiteral 8)))) TO 
															(addTo 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord ONE-X)))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord ONE-E))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(numericLiteral 
																						(integerLiteral 2)))))))))))) 
											(ifThen 
												(statement 
													(addStatement ADD 
														(addToStatement 
															(addFrom 
																(literal 
																	(numericLiteral 
																		(integerLiteral 80)))) TO 
															(addTo 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord ONE-X)))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord ONE-D))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(numericLiteral 
																						(integerLiteral 2)))))))))))) 
											(ifThen 
												(statement 
													(addStatement ADD 
														(addToStatement 
															(addFrom 
																(literal 
																	(numericLiteral 
																		(integerLiteral 800)))) TO 
															(addTo 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord ONE-X)))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord ONE-C))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(numericLiteral 
																						(integerLiteral 2)))))))))))) 
											(ifThen 
												(statement 
													(addStatement ADD 
														(addToStatement 
															(addFrom 
																(literal 
																	(numericLiteral 
																		(integerLiteral 8000)))) TO 
															(addTo 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord ONE-X)))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord ONE-B))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(numericLiteral 
																						(integerLiteral 2)))))))))))) 
											(ifThen 
												(statement 
													(addStatement ADD 
														(addToStatement 
															(addFrom 
																(literal 
																	(numericLiteral 
																		(integerLiteral 80000)))) TO 
															(addTo 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord ONE-X)))))))))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord IF-INIT-GF-X)))))) .\n      )) 
							(paragraph 
								(paragraphName 
									(cobolWord IF-INIT-GF-Y)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "VI-89 6.15.4 GR1(C)")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ANSI-REFERENCE)))))))) .\n           ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord PAR-NUMBER))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(numericLiteral 
															(integerLiteral 22)))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ACCUM-DATANAME)))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord IF-TEST-GF-Y)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "FALSE")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord T-F)))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord ACCUM-DATANAME))))))))) 
																(relationalOperator NOT EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(numericLiteral 
																						(integerLiteral 1)))))))))))) 
											(ifThen 
												(statement 
													(ifStatement IF 
														(condition 
															(combinableCondition 
																(simpleCondition 
																	(relationCondition 
																		(relationArithmeticComparison 
																			(arithmeticExpression 
																				(multDivs 
																					(powers 
																						(basis 
																							(identifier 
																								(qualifiedDataName 
																									(qualifiedDataNameFormat1 
																										(dataName 
																											(cobolWord ACCUM-DATANAME))))))))) 
																			(relationalOperator NOT EQUAL TO) 
																			(arithmeticExpression 
																				(multDivs 
																					(powers 
																						(basis 
																							(literal 
																								(numericLiteral 
																									(integerLiteral 2)))))))))))) 
														(ifThen 
															(statement 
																(ifStatement IF 
																	(condition 
																		(combinableCondition 
																			(simpleCondition 
																				(relationCondition 
																					(relationArithmeticComparison 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(identifier 
																											(qualifiedDataName 
																												(qualifiedDataNameFormat1 
																													(dataName 
																														(cobolWord ACCUM-DATANAME))))))))) 
																						(relationalOperator NOT EQUAL TO) 
																						(arithmeticExpression 
																							(multDivs 
																								(powers 
																									(basis 
																										(literal 
																											(numericLiteral 
																												(integerLiteral 3)))))))))))) 
																	(ifThen 
																		(statement 
																			(ifStatement IF 
																				(condition 
																					(combinableCondition 
																						(simpleCondition 
																							(relationCondition 
																								(relationArithmeticComparison 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(identifier 
																														(qualifiedDataName 
																															(qualifiedDataNameFormat1 
																																(dataName 
																																	(cobolWord ACCUM-DATANAME))))))))) 
																									(relationalOperator NOT EQUAL TO) 
																									(arithmeticExpression 
																										(multDivs 
																											(powers 
																												(basis 
																													(literal 
																														(numericLiteral 
																															(integerLiteral 4)))))))))))) 
																				(ifThen 
																					(statement 
																						(ifStatement IF 
																							(condition 
																								(combinableCondition 
																									(simpleCondition 
																										(relationCondition 
																											(relationArithmeticComparison 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(identifier 
																																	(qualifiedDataName 
																																		(qualifiedDataNameFormat1 
																																			(dataName 
																																				(cobolWord ACCUM-DATANAME))))))))) 
																												(relationalOperator NOT EQUAL TO) 
																												(arithmeticExpression 
																													(multDivs 
																														(powers 
																															(basis 
																																(literal 
																																	(numericLiteral 
																																		(integerLiteral 5)))))))))))) 
																							(ifThen 
																								(statement 
																									(ifStatement IF 
																										(condition 
																											(combinableCondition 
																												(simpleCondition 
																													(relationCondition 
																														(relationArithmeticComparison 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(identifier 
																																				(qualifiedDataName 
																																					(qualifiedDataNameFormat1 
																																						(dataName 
																																							(cobolWord ACCUM-DATANAME))))))))) 
																															(relationalOperator NOT EQUAL TO) 
																															(arithmeticExpression 
																																(multDivs 
																																	(powers 
																																		(basis 
																																			(literal 
																																				(numericLiteral 
																																					(integerLiteral 6)))))))))))) 
																										(ifThen 
																											(statement 
																												(ifStatement IF 
																													(condition 
																														(combinableCondition 
																															(simpleCondition 
																																(relationCondition 
																																	(relationArithmeticComparison 
																																		(arithmeticExpression 
																																			(multDivs 
																																				(powers 
																																					(basis 
																																						(identifier 
																																							(qualifiedDataName 
																																								(qualifiedDataNameFormat1 
																																									(dataName 
																																										(cobolWord ACCUM-DATANAME))))))))) 
																																		(relationalOperator NOT EQUAL TO) 
																																		(arithmeticExpression 
																																			(multDivs 
																																				(powers 
																																					(basis 
																																						(literal 
																																							(numericLiteral 
																																								(integerLiteral 7)))))))))))) 
																													(ifThen 
																														(statement 
																															(ifStatement IF 
																																(condition 
																																	(combinableCondition 
																																		(simpleCondition 
																																			(relationCondition 
																																				(relationArithmeticComparison 
																																					(arithmeticExpression 
																																						(multDivs 
																																							(powers 
																																								(basis 
																																									(identifier 
																																										(qualifiedDataName 
																																											(qualifiedDataNameFormat1 
																																												(dataName 
																																													(cobolWord ACCUM-DATANAME))))))))) 
																																					(relationalOperator NOT EQUAL TO) 
																																					(arithmeticExpression 
																																						(multDivs 
																																							(powers 
																																								(basis 
																																									(literal 
																																										(numericLiteral 
																																											(integerLiteral 8)))))))))))) 
																																(ifThen 
																																	(statement 
																																		(ifStatement IF 
																																			(condition 
																																				(combinableCondition 
																																					(simpleCondition 
																																						(relationCondition 
																																							(relationArithmeticComparison 
																																								(arithmeticExpression 
																																									(multDivs 
																																										(powers 
																																											(basis 
																																												(identifier 
																																													(qualifiedDataName 
																																														(qualifiedDataNameFormat1 
																																															(dataName 
																																																(cobolWord ACCUM-DATANAME))))))))) 
																																								(relationalOperator NOT EQUAL TO) 
																																								(arithmeticExpression 
																																									(multDivs 
																																										(powers 
																																											(basis 
																																												(literal 
																																													(numericLiteral 
																																														(integerLiteral 9)))))))))))) 
																																			(ifThen 
																																				(statement 
																																					(ifStatement IF 
																																						(condition 
																																							(combinableCondition 
																																								(simpleCondition 
																																									(relationCondition 
																																										(relationArithmeticComparison 
																																											(arithmeticExpression 
																																												(multDivs 
																																													(powers 
																																														(basis 
																																															(identifier 
																																																(qualifiedDataName 
																																																	(qualifiedDataNameFormat1 
																																																		(dataName 
																																																			(cobolWord ACCUM-DATANAME))))))))) 
																																											(relationalOperator NOT EQUAL TO) 
																																											(arithmeticExpression 
																																												(multDivs 
																																													(powers 
																																														(basis 
																																															(literal 
																																																(numericLiteral 
																																																	(integerLiteral 10)))))))))))) 
																																						(ifThen 
																																							(statement 
																																								(ifStatement IF 
																																									(condition 
																																										(combinableCondition 
																																											(simpleCondition 
																																												(relationCondition 
																																													(relationArithmeticComparison 
																																														(arithmeticExpression 
																																															(multDivs 
																																																(powers 
																																																	(basis 
																																																		(identifier 
																																																			(qualifiedDataName 
																																																				(qualifiedDataNameFormat1 
																																																					(dataName 
																																																						(cobolWord ACCUM-DATANAME))))))))) 
																																														(relationalOperator NOT EQUAL TO) 
																																														(arithmeticExpression 
																																															(multDivs 
																																																(powers 
																																																	(basis 
																																																		(literal 
																																																			(numericLiteral 
																																																				(integerLiteral 11)))))))))))) 
																																									(ifThen 
																																										(statement 
																																											(ifStatement IF 
																																												(condition 
																																													(combinableCondition 
																																														(simpleCondition 
																																															(relationCondition 
																																																(relationArithmeticComparison 
																																																	(arithmeticExpression 
																																																		(multDivs 
																																																			(powers 
																																																				(basis 
																																																					(identifier 
																																																						(qualifiedDataName 
																																																							(qualifiedDataNameFormat1 
																																																								(dataName 
																																																									(cobolWord ACCUM-DATANAME))))))))) 
																																																	(relationalOperator NOT EQUAL TO) 
																																																	(arithmeticExpression 
																																																		(multDivs 
																																																			(powers 
																																																				(basis 
																																																					(literal 
																																																						(numericLiteral 
																																																							(integerLiteral 12)))))))))))) 
																																												(ifThen 
																																													(statement 
																																														(ifStatement IF 
																																															(condition 
																																																(combinableCondition 
																																																	(simpleCondition 
																																																		(relationCondition 
																																																			(relationArithmeticComparison 
																																																				(arithmeticExpression 
																																																					(multDivs 
																																																						(powers 
																																																							(basis 
																																																								(identifier 
																																																									(qualifiedDataName 
																																																										(qualifiedDataNameFormat1 
																																																											(dataName 
																																																												(cobolWord ACCUM-DATANAME))))))))) 
																																																				(relationalOperator NOT EQUAL TO) 
																																																				(arithmeticExpression 
																																																					(multDivs 
																																																						(powers 
																																																							(basis 
																																																								(literal 
																																																									(numericLiteral 
																																																										(integerLiteral 13)))))))))))) 
																																															(ifThen 
																																																(statement 
																																																	(ifStatement IF 
																																																		(condition 
																																																			(combinableCondition 
																																																				(simpleCondition 
																																																					(relationCondition 
																																																						(relationArithmeticComparison 
																																																							(arithmeticExpression 
																																																								(multDivs 
																																																									(powers 
																																																										(basis 
																																																											(identifier 
																																																												(qualifiedDataName 
																																																													(qualifiedDataNameFormat1 
																																																														(dataName 
																																																															(cobolWord ACCUM-DATANAME))))))))) 
																																																							(relationalOperator NOT EQUAL TO) 
																																																							(arithmeticExpression 
																																																								(multDivs 
																																																									(powers 
																																																										(basis 
																																																											(literal 
																																																												(numericLiteral 
																																																													(integerLiteral 14)))))))))))) 
																																																		(ifThen 
																																																			(statement 
																																																				(ifStatement IF 
																																																					(condition 
																																																						(combinableCondition 
																																																							(simpleCondition 
																																																								(relationCondition 
																																																									(relationArithmeticComparison 
																																																										(arithmeticExpression 
																																																											(multDivs 
																																																												(powers 
																																																													(basis 
																																																														(identifier 
																																																															(qualifiedDataName 
																																																																(qualifiedDataNameFormat1 
																																																																	(dataName 
																																																																		(cobolWord ACCUM-DATANAME))))))))) 
																																																										(relationalOperator NOT EQUAL TO) 
																																																										(arithmeticExpression 
																																																											(multDivs 
																																																												(powers 
																																																													(basis 
																																																														(literal 
																																																															(numericLiteral 
																																																																(integerLiteral 15)))))))))))) 
																																																					(ifThen 
																																																						(statement 
																																																							(ifStatement IF 
																																																								(condition 
																																																									(combinableCondition 
																																																										(simpleCondition 
																																																											(relationCondition 
																																																												(relationArithmeticComparison 
																																																													(arithmeticExpression 
																																																														(multDivs 
																																																															(powers 
																																																																(basis 
																																																																	(identifier 
																																																																		(qualifiedDataName 
																																																																			(qualifiedDataNameFormat1 
																																																																				(dataName 
																																																																					(cobolWord ACCUM-DATANAME))))))))) 
																																																													(relationalOperator NOT EQUAL TO) 
																																																													(arithmeticExpression 
																																																														(multDivs 
																																																															(powers 
																																																																(basis 
																																																																	(literal 
																																																																		(numericLiteral 
																																																																			(integerLiteral 16)))))))))))) 
																																																								(ifThen 
																																																									(statement 
																																																										(ifStatement IF 
																																																											(condition 
																																																												(combinableCondition 
																																																													(simpleCondition 
																																																														(relationCondition 
																																																															(relationArithmeticComparison 
																																																																(arithmeticExpression 
																																																																	(multDivs 
																																																																		(powers 
																																																																			(basis 
																																																																				(identifier 
																																																																					(qualifiedDataName 
																																																																						(qualifiedDataNameFormat1 
																																																																							(dataName 
																																																																								(cobolWord ACCUM-DATANAME))))))))) 
																																																																(relationalOperator NOT EQUAL TO) 
																																																																(arithmeticExpression 
																																																																	(multDivs 
																																																																		(powers 
																																																																			(basis 
																																																																				(literal 
																																																																					(numericLiteral 
																																																																						(integerLiteral 17)))))))))))) 
																																																											(ifThen 
																																																												(statement 
																																																													(ifStatement IF 
																																																														(condition 
																																																															(combinableCondition 
																																																																(simpleCondition 
																																																																	(relationCondition 
																																																																		(relationArithmeticComparison 
																																																																			(arithmeticExpression 
																																																																				(multDivs 
																																																																					(powers 
																																																																						(basis 
																																																																							(identifier 
																																																																								(qualifiedDataName 
																																																																									(qualifiedDataNameFormat1 
																																																																										(dataName 
																																																																											(cobolWord ACCUM-DATANAME))))))))) 
																																																																			(relationalOperator NOT EQUAL TO) 
																																																																			(arithmeticExpression 
																																																																				(multDivs 
																																																																					(powers 
																																																																						(basis 
																																																																							(literal 
																																																																								(numericLiteral 
																																																																									(integerLiteral 18)))))))))))) 
																																																														(ifThen 
																																																															(statement 
																																																																(ifStatement IF 
																																																																	(condition 
																																																																		(combinableCondition 
																																																																			(simpleCondition 
																																																																				(relationCondition 
																																																																					(relationArithmeticComparison 
																																																																						(arithmeticExpression 
																																																																							(multDivs 
																																																																								(powers 
																																																																									(basis 
																																																																										(identifier 
																																																																											(qualifiedDataName 
																																																																												(qualifiedDataNameFormat1 
																																																																													(dataName 
																																																																														(cobolWord ACCUM-DATANAME))))))))) 
																																																																						(relationalOperator NOT EQUAL TO) 
																																																																						(arithmeticExpression 
																																																																							(multDivs 
																																																																								(powers 
																																																																									(basis 
																																																																										(literal 
																																																																											(numericLiteral 
																																																																												(integerLiteral 19)))))))))))) 
																																																																	(ifThen 
																																																																		(statement 
																																																																			(ifStatement IF 
																																																																				(condition 
																																																																					(combinableCondition 
																																																																						(simpleCondition 
																																																																							(relationCondition 
																																																																								(relationArithmeticComparison 
																																																																									(arithmeticExpression 
																																																																										(multDivs 
																																																																											(powers 
																																																																												(basis 
																																																																													(identifier 
																																																																														(qualifiedDataName 
																																																																															(qualifiedDataNameFormat1 
																																																																																(dataName 
																																																																																	(cobolWord ACCUM-DATANAME))))))))) 
																																																																									(relationalOperator NOT EQUAL TO) 
																																																																									(arithmeticExpression 
																																																																										(multDivs 
																																																																											(powers 
																																																																												(basis 
																																																																													(literal 
																																																																														(numericLiteral 
																																																																															(integerLiteral 20)))))))))))) 
																																																																				(ifThen 
																																																																					(statement 
																																																																						(ifStatement IF 
																																																																							(condition 
																																																																								(combinableCondition 
																																																																									(simpleCondition 
																																																																										(relationCondition 
																																																																											(relationArithmeticComparison 
																																																																												(arithmeticExpression 
																																																																													(multDivs 
																																																																														(powers 
																																																																															(basis 
																																																																																(identifier 
																																																																																	(qualifiedDataName 
																																																																																		(qualifiedDataNameFormat1 
																																																																																			(dataName 
																																																																																				(cobolWord ACCUM-DATANAME))))))))) 
																																																																												(relationalOperator NOT EQUAL TO) 
																																																																												(arithmeticExpression 
																																																																													(multDivs 
																																																																														(powers 
																																																																															(basis 
																																																																																(literal 
																																																																																	(numericLiteral 
																																																																																		(integerLiteral 21)))))))))))) 
																																																																							(ifThen 
																																																																								(statement 
																																																																									(moveStatement MOVE 
																																																																										(moveToStatement 
																																																																											(moveToSendingArea 
																																																																												(literal "TRUE")) TO 
																																																																											(identifier 
																																																																												(qualifiedDataName 
																																																																													(qualifiedDataNameFormat1 
																																																																														(dataName 
																																																																															(cobolWord T-F))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord ACCUM-DATANAME))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(numericLiteral 
																						(integerLiteral 22))))))))))) 
												(andOrCondition AND 
													(combinableCondition 
														(simpleCondition 
															(relationCondition 
																(relationArithmeticComparison 
																	(arithmeticExpression 
																		(multDivs 
																			(powers 
																				(basis 
																					(identifier 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord T-F))))))))) 
																	(relationalOperator EQUAL TO) 
																	(arithmeticExpression 
																		(multDivs 
																			(powers 
																				(basis 
																					(literal "TRUE"))))))))))) 
											(ifThen 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PASS)))))) 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord IF-WRITE-GF-Y)))))) 
												(statement 
													(subtractStatement SUBTRACT 
														(subtractFromStatement 
															(subtractSubtrahend 
																(literal 
																	(numericLiteral 
																		(integerLiteral 1)))) FROM 
															(subtractMinuend 
																(identifier 
																	(qualifiedDataName 
																		(qualifiedDataNameFormat1 
																			(dataName 
																				(cobolWord ACCUM-DATANAME))))))))) 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord IF-TEST-GF-Y))))))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord ACCUM-DATANAME))))))))) 
																(relationalOperator LESS THAN) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(numericLiteral 
																						(integerLiteral 22))))))))))) 
												(andOrCondition AND 
													(combinableCondition 
														(simpleCondition 
															(relationCondition 
																(relationArithmeticComparison 
																	(arithmeticExpression 
																		(multDivs 
																			(powers 
																				(basis 
																					(identifier 
																						(qualifiedDataName 
																							(qualifiedDataNameFormat1 
																								(dataName 
																									(cobolWord T-F))))))))) 
																	(relationalOperator EQUAL TO) 
																	(arithmeticExpression 
																		(multDivs 
																			(powers 
																				(basis 
																					(literal "FALSE"))))))))))) 
											(ifThen 
												(statement 
													(performStatement PERFORM 
														(performProcedureStatement 
															(procedureName 
																(paragraphName 
																	(cobolWord PASS)))))) 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord IF-WRITE-GF-Y))))))) 
											(ifElse ELSE 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord IF-FAIL-GF-Y))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord IF-DELETE-GF-Y)) .\n            
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 21)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord PAR-NUMBER))))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord DE-LETE)))))) .\n           ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 21)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord DELETE-COUNTER))))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord ACCUM-DATANAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord IF-WRITE-GF-Y)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord IF-FAIL-GF-Y)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(literal "*****")) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord COMPUTED-A))))) 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CORRECT-A)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ACCUM-DATANAME)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord CHECK-VALU)))))))) .\n           ) 
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord CHECK-PARA)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord RE-MARK)))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord FAIL)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord IF-WRITE-GF-Y)) .\n            
								(sentence 
									(statement 
										(moveStatement MOVE 
											(moveToStatement 
												(moveToSendingArea 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord PARAGRAPH-NAME)))))) TO 
												(identifier 
													(qualifiedDataName 
														(qualifiedDataNameFormat1 
															(dataName 
																(cobolWord PAR-NAME)))))))) .\n           ) 
								(sentence 
									(statement 
										(addStatement ADD 
											(addToStatement 
												(addFrom 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) TO 
												(addTo 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord PAR-NUMBER))))))))) .\n           ) 
								(sentence 
									(statement 
										(performStatement PERFORM 
											(performProcedureStatement 
												(procedureName 
													(paragraphName 
														(cobolWord PRINT-DETAIL)))))) .\n           ) 
								(sentence 
									(statement 
										(ifStatement IF 
											(condition 
												(combinableCondition 
													(simpleCondition 
														(relationCondition 
															(relationArithmeticComparison 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(identifier 
																					(qualifiedDataName 
																						(qualifiedDataNameFormat1 
																							(dataName 
																								(cobolWord ACCUM-DATANAME))))))))) 
																(relationalOperator EQUAL TO) 
																(arithmeticExpression 
																	(multDivs 
																		(powers 
																			(basis 
																				(literal 
																					(numericLiteral 
																						(integerLiteral 1)))))))))))) 
											(ifThen 
												(statement 
													(goToStatement GO TO 
														(goToStatementSimple 
															(procedureName 
																(paragraphName 
																	(cobolWord TEST-EXIT))))))))) .\n           ) 
								(sentence 
									(statement 
										(subtractStatement SUBTRACT 
											(subtractFromStatement 
												(subtractSubtrahend 
													(literal 
														(numericLiteral 
															(integerLiteral 1)))) FROM 
												(subtractMinuend 
													(identifier 
														(qualifiedDataName 
															(qualifiedDataNameFormat1 
																(dataName 
																	(cobolWord ACCUM-DATANAME))))))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord IF-RETURN-GF-Y)) .\n            
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord IF-TEST-GF-Y)))))) .\n       )) 
							(paragraph 
								(paragraphName 
									(cobolWord TEST-EXIT)) .\n            
								(sentence 
									(statement 
										(exitStatement EXIT)) .\n       )))) 
					(procedureSection 
						(procedureSectionHeader 
							(sectionName 
								(cobolWord CCVS-EXIT)) SECTION) .\n        
						(paragraphs 
							(paragraph 
								(paragraphName 
									(cobolWord CCVS-999999)) .\n            
								(sentence 
									(statement 
										(goToStatement GO TO 
											(goToStatementSimple 
												(procedureName 
													(paragraphName 
														(cobolWord CLOSE-FILES)))))) .\n      )))))))) <EOF>)