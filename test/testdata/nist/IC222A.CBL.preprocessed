      *> HEADER,COBOL,IC222A
       IDENTIFICATION DIVISION.
       PROGRAM-ID.
           IC222A.
      *> ***************************************************************
      *>                                                               *
      *>     VALIDATION FOR:-                                          *
      *>                                                               *
      *>     "ON-SITE VALIDATION, NATIONAL INSTITUTE OF STD & TECH.     ".
      *>                                                               *
      *>     "COBOL 85 VERSION 4.2, Apr  1993 SSVG                      ".
      *>                                                               *
      *> ***************************************************************
      *>                                                               *
      *>       X-CARDS USED BY THIS PROGRAM ARE :-                     *
      *>                                                               *
      *>             X-55   SYSTEM PRINTER                             *
      *>             X-82   SOURCE-COMPUTER                            *
      *>             X-83   OBJECT-COMPUTER.                           *
      *>                                                               *
      *> ***************************************************************
      *>                                                               *
      *>     THE SOURCE FILE CONTAINS TWO PROGRAMS, IC222A AND         *
      *>     IC222A-1, WHICH TEST LANGUAGE ELEMENTS FROM  LEVEL 2 OF   *
      *>     THE INTER-PROGRAM COMMUNICATION MODULE.  THE LANGUAGE     *
      *>     ELEMENTS TESTED ARE:                                      *
      *>           "ON EXCEPTION"     PHRASE                           *
      *>           "NOT ON EXCEPTION" PHRASE                           *
      *>           "END-CALL"         PHRASE                           *
      *>           "ON OVERFLOW"      PHRASE                           *
      *>                                                               *
      *>     THE TWO PROGRAMS SHOULD BE COMPILED IN THE SAME           *
      *>     INVOCATION OF THE COMPILER TO TEST THE BATCH COMPILATION  *
      *>     FEATURE AND RECOGNITION OF THE END PROGRAM HEADER.  THE   *
      *>     ARRANGEMENT OF THE PROGRAMS IN THE SOURCE FILE IS:        *
      *>                                                               *
      *>     IDENTIFICATION DIVISION.                                  *
      *>     PROGRAM-ID. IC222A.                                       *
      *>           .                                                   *
      *>           .                                                   *
      *>           .                                                   *
      *>     END PROGRAM IC222A.
      *>     IDENTIFICATION DIVISION.
      *>     PROGRAM-ID. IC222A-1.
      *>           .                                                   *
      *>           .                                                   *
      *>           .                                                   *
      *>                                                               *
      *>     IC222A, THE FIRST PROGRAM IN THE FILE, CONTAINS THE       *
      *>     SUBSTANTIVE TESTS.  THE ONLY FUNCTION OF THE OTHER        *
      *>     PROGRAM IS TO ENSURE THAT A PROGRAM WITH KNOWN PARAMETER  *
      *>     REQUIREMENTS IS AVAILABLE TO BE CALLED.  IC222A TESTS     *
      *>     CONTROL FLOW THROUGH VARIANTS OF THE CALL STATEMENT WITH  *
      *>     THE "ON EXCEPTION" PHRASE PRESENT OR ABSENT; THE "NOT ON  *
      *>     EXCEPTION" PHRASE PRESENT OR ABSENT; AND AVAILABLE OR     *
      *>     NON-AVAIABLE TARGET PROGRAMS.  EACH CALL STATEMENT HAS AN *
      *>     END-CALL PHRASE, AND THERE ARE SECONDARY TESTS WHICH      *
      *>     CHECK THAT STATEMENTS FOLLOWING END-CALL ARE PROPERLY     *
      *>     EXECUTED.                                                 *
      *> 
      *>     THIS TEST SET DOES NOT EXAMINE THE RESULTS RETURNED BY    *
      *>     THE CALLED PROGRAM, BUT IS WHOLLY CONCERNED WITH THE FLOW *
      *>     OF CONTROL IN THE CALLING PROGRAM DURING EXECUTION OF A   *
      *>     CALL STATEMENT.                                           *
      *>                                                               *
      *>     THERE ARE EIGHT POSIBLE COMBINATIONS OF CALL STATEMENT    *
      *>     FORMAT AND CALLED PROGRAM AVAILABILITY THAT COULD BE      *
      *>     TESTED.  TWO OF THESE COMBINATIONS, THOSE WHERE A PROGRAM *
      *>     WHICH IS NOT AVAILABLE IS CALLED THROUGH  A STATEMENT     *
      *>     WHICH DOES NOT CONTAIN AN "ON EXCEPTION" PHRASE, PRODUCE  *
      *>     EFFECTS WHICH THE STANDARD LEAVES UNDEFINED.  THUS THERE  *
      *>     ARE SIX CASES WHICH CAN BE TESTED.  THIS TEST SUITE TESTS *
      *>     ALL SIX.  IN ADDITION, IT TESTS THE TWO CASES WHERE       *
      *>     "ON OVERFLOW" CAN BE USED IN PLACE OF "ON EXCEPTION".     *
      *>     EACH OF THE EIGHT MAJOR TESTS IS FOLLOWED BY A            *
      *>     SUBORDINATE TEST WHICH IS INTENDED TO CHECK THE WAY       *
      *>     THAT CONTROL HAS FLOWED THROUGH THE PHRASES OF THE CALL   *
      *>     STATEMENT.  EVERY CALL STATEMENT IN IC222A HAS AN         *
      *>     "END-CALL" SCOPE DELIMITER.  THIS SCOPE DELIMITER IS      *
      *>     FOLLOWED BY ONE MORE STATEMENT IN THE SENTENCE, AND THE   *
      *>     SUBORDINATE TESTS CHECK THAT THIS ADDITIONAL STATEMENT    *
      *>     HAS BEEN EXECUTED.                                        *
      *>                                                               *
      *> ***************************************************************
      *> 
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER.
           XXXXX082.
       OBJECT-COMPUTER.
           XXXXX083.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT PRINT-FILE ASSIGN TO
           XXXXX055.
      *> 
       DATA DIVISION.
       FILE SECTION.
       FD  PRINT-FILE.
       01  PRINT-REC PICTURE X(120).
       01  DUMMY-RECORD PICTURE X(120).
      *> 
       WORKING-STORAGE SECTION.
       77  DN1 PICTURE S99  VALUE ZERO.
       77  DN3 PICTURE S99.
       77  ID1 PICTURE X(8) VALUE "IC222A-1".
       77  ID2 PICTURE X(8).
       77  DN2 PICTURE S99
               USAGE COMPUTATIONAL, VALUE ZERO.
       77  DN4 PICTURE S99
               USAGE IS COMPUTATIONAL.
       77  CALL-FLAG PIC 9.
       01  EXCEPTION-PATH-FLAG PICTURE X.
      *> 
       01  TEST-RESULTS.
           02 FILLER                   PIC X      VALUE SPACE.
           02 FEATURE                  PIC X(20)  VALUE SPACE.
           02 FILLER                   PIC X      VALUE SPACE.
           02 P-OR-F                   PIC X(5)   VALUE SPACE.
           02 FILLER                   PIC X      VALUE SPACE.
           02  PAR-NAME.
             03 FILLER                 PIC X(19)  VALUE SPACE.
             03  PARDOT-X              PIC X      VALUE SPACE.
             03 DOTVALUE               PIC 99     VALUE ZERO.
           02 FILLER                   PIC X(8)   VALUE SPACE.
           02 RE-MARK                  PIC X(61).
       01  TEST-COMPUTED.
           02 FILLER                   PIC X(30)  VALUE SPACE.
           02 FILLER                   PIC X(17)  VALUE
                  "       COMPUTED=".
           02 COMPUTED-X.
           03 COMPUTED-A               PIC X(20)  VALUE SPACE.
           03 COMPUTED-N               REDEFINES COMPUTED-A
                                       PIC -9(9).9(9).
           03 COMPUTED-0V18 REDEFINES COMPUTED-A   PIC -.9(18).
           03 COMPUTED-4V14 REDEFINES COMPUTED-A   PIC -9(4).9(14).
           03 COMPUTED-14V4 REDEFINES COMPUTED-A   PIC -9(14).9(4).
           03       CM-18V0 REDEFINES COMPUTED-A.
               04 COMPUTED-18V0                    PIC -9(18).
               04 FILLER                           PIC X.
           03 FILLER PIC X(50) VALUE SPACE.
       01  TEST-CORRECT.
           02 FILLER PIC X(30) VALUE SPACE.
           02 FILLER PIC X(17) VALUE "       CORRECT =".
           02 CORRECT-X.
           03 CORRECT-A                  PIC X(20) VALUE SPACE.
           03 CORRECT-N    REDEFINES CORRECT-A     PIC -9(9).9(9).
           03 CORRECT-0V18 REDEFINES CORRECT-A     PIC -.9(18).
           03 CORRECT-4V14 REDEFINES CORRECT-A     PIC -9(4).9(14).
           03 CORRECT-14V4 REDEFINES CORRECT-A     PIC -9(14).9(4).
           03      CR-18V0 REDEFINES CORRECT-A.
               04 CORRECT-18V0                     PIC -9(18).
               04 FILLER                           PIC X.
           03 FILLER PIC X(2) VALUE SPACE.
           03 COR-ANSI-REFERENCE             PIC X(48) VALUE SPACE.
       01  CCVS-C-1.
           02 FILLER  PIC IS X(99)    VALUE IS " FEATURE              PASS  PARAGRAPH-NAME                                                 REMARKS".
           02 FILLER                     PIC X(20)    VALUE SPACE.
       01  CCVS-C-2.
           02 FILLER                     PIC X        VALUE SPACE.
           02 FILLER                     PIC X(6)     VALUE "TESTED".
           02 FILLER                     PIC X(15)    VALUE SPACE.
           02 FILLER                     PIC X(4)     VALUE "FAIL".
           02 FILLER                     PIC X(94)    VALUE SPACE.
       01  REC-SKL-SUB                   PIC 9(2)     VALUE ZERO.
       01  REC-CT                        PIC 99       VALUE ZERO.
       01  DELETE-COUNTER                PIC 999      VALUE ZERO.
       01  ERROR-COUNTER                 PIC 999      VALUE ZERO.
       01  INSPECT-COUNTER               PIC 999      VALUE ZERO.
       01  PASS-COUNTER                  PIC 999      VALUE ZERO.
       01  TOTAL-ERROR                   PIC 999      VALUE ZERO.
       01  ERROR-HOLD                    PIC 999      VALUE ZERO.
       01  DUMMY-HOLD                    PIC X(120)   VALUE SPACE.
       01  RECORD-COUNT                  PIC 9(5)     VALUE ZERO.
       01  ANSI-REFERENCE                PIC X(48)    VALUE SPACES.
       01  CCVS-H-1.
           02  FILLER                    PIC X(39)    VALUE SPACES.
           02  FILLER                    PIC X(42)    VALUE
           "OFFICIAL COBOL COMPILER VALIDATION SYSTEM".
           02  FILLER                    PIC X(39)    VALUE SPACES.
       01  CCVS-H-2A.
         02  FILLER                        PIC X(40)  VALUE SPACE.
         02  FILLER                        PIC X(7)   VALUE "CCVS85 ".
         02  FILLER                        PIC XXXX   VALUE
           "4.2 ".
         02  FILLER                        PIC X(28)  VALUE
                  " COPY - NOT FOR DISTRIBUTION".
         02  FILLER                        PIC X(41)  VALUE SPACE.
       
       01  CCVS-H-2B.
         02  FILLER                        PIC X(15)  VALUE
                  "TEST RESULT OF ".
         02  TEST-ID                       PIC X(9).
         02  FILLER                        PIC X(4)   VALUE
                  " IN ".
         02  FILLER                        PIC X(12)  VALUE
           " HIGH       ".
         02  FILLER                        PIC X(22)  VALUE
                  " LEVEL VALIDATION FOR ".
         02  FILLER                        PIC X(58)  VALUE
           "ON-SITE VALIDATION, NATIONAL INSTITUTE OF STD & TECH.     ".
       01  CCVS-H-3.
           02  FILLER                      PIC X(34)  VALUE
                  " FOR OFFICIAL USE ONLY    ".
           02  FILLER                      PIC X(58)  VALUE
           "COBOL 85 VERSION 4.2, Apr  1993 SSVG                      ".
           02  FILLER                      PIC X(28)  VALUE
                  "  COPYRIGHT   1985,1986 ".
       01  CCVS-E-1.
           02 FILLER                       PIC X(52)  VALUE SPACE.
           02 FILLER  PIC X(14) VALUE IS "END OF TEST-  ".
           02 ID-AGAIN                     PIC X(9).
           02 FILLER                       PIC X(45)  VALUE SPACES.
       01  CCVS-E-2.
           02  FILLER                      PIC X(31)  VALUE SPACE.
           02  FILLER                      PIC X(21)  VALUE SPACE.
           02 CCVS-E-2-2.
               03 ERROR-TOTAL              PIC XXX    VALUE SPACE.
               03 FILLER                   PIC X      VALUE SPACE.
               03 ENDER-DESC               PIC X(44)  VALUE
                  "ERRORS ENCOUNTERED".
       01  CCVS-E-3.
           02  FILLER                      PIC X(22)  VALUE
                  " FOR OFFICIAL USE ONLY".
           02  FILLER                      PIC X(12)  VALUE SPACE.
           02  FILLER                      PIC X(58)  VALUE
           "ON-SITE VALIDATION, NATIONAL INSTITUTE OF STD & TECH.     ".
           02  FILLER                      PIC X(8)   VALUE SPACE.
           02  FILLER                      PIC X(20)  VALUE
                   " COPYRIGHT 1985,1986".
       01  CCVS-E-4.
           02 CCVS-E-4-1                   PIC XXX    VALUE SPACE.
           02 FILLER                       PIC X(4)   VALUE " OF ".
           02 CCVS-E-4-2                   PIC XXX    VALUE SPACE.
           02 FILLER                       PIC X(40)  VALUE
            "  TESTS WERE EXECUTED SUCCESSFULLY".
       01  XXINFO.
           02 FILLER                       PIC X(19)  VALUE
                  "*** INFORMATION ***".
           02 INFO-TEXT.
             04 FILLER                     PIC X(8)   VALUE SPACE.
             04 XXCOMPUTED                 PIC X(20).
             04 FILLER                     PIC X(5)   VALUE SPACE.
             04 XXCORRECT                  PIC X(20).
           02 INF-ANSI-REFERENCE           PIC X(48).
       01  HYPHEN-LINE.
           02 FILLER  PIC IS X VALUE IS SPACE.
           02 FILLER  PIC IS X(65)    VALUE IS "*****************************************************************".
           02 FILLER  PIC IS X(54)    VALUE IS "******************************************************".
       01  CCVS-PGM-ID                     PIC X(9)   VALUE
           "IC222A".
      *> 
       PROCEDURE DIVISION.
       CCVS1 SECTION.
       OPEN-FILES.
           OPEN    OUTPUT PRINT-FILE.
           MOVE  CCVS-PGM-ID TO TEST-ID. MOVE CCVS-PGM-ID TO ID-AGAIN.
           MOVE    SPACE TO TEST-RESULTS.
           PERFORM HEAD-ROUTINE THRU COLUMN-NAMES-ROUTINE.
           GO TO CCVS1-EXIT.
       CLOSE-FILES.
           PERFORM END-ROUTINE THRU END-ROUTINE-13. CLOSE PRINT-FILE.
       TERMINATE-CCVS.
      *>     EXIT PROGRAM.
      *> TERMINATE-CALL.
           STOP     RUN.
       INSPT. MOVE "INSPT" TO P-OR-F. ADD 1 TO INSPECT-COUNTER.
       PASS.  MOVE "PASS " TO P-OR-F.  ADD 1 TO PASS-COUNTER.
       FAIL.  MOVE "FAIL*" TO P-OR-F.  ADD 1 TO ERROR-COUNTER.
       DE-LETE.  MOVE "*****" TO P-OR-F.  ADD 1 TO DELETE-COUNTER.
           MOVE "****TEST DELETED****" TO RE-MARK.
       PRINT-DETAIL.
           IF REC-CT NOT EQUAL TO ZERO
                   MOVE "." TO PARDOT-X
                   MOVE REC-CT TO DOTVALUE.
           MOVE     TEST-RESULTS TO PRINT-REC. PERFORM WRITE-LINE.
           IF P-OR-F EQUAL TO "FAIL*"  PERFORM WRITE-LINE
              PERFORM FAIL-ROUTINE THRU FAIL-ROUTINE-EX
                ELSE PERFORM BAIL-OUT THRU BAIL-OUT-EX.
           MOVE SPACE TO P-OR-F. MOVE SPACE TO COMPUTED-X.
           MOVE SPACE TO CORRECT-X.
           IF     REC-CT EQUAL TO ZERO  MOVE SPACE TO PAR-NAME.
           MOVE     SPACE TO RE-MARK.
       HEAD-ROUTINE.
           MOVE CCVS-H-1  TO DUMMY-RECORD. PERFORM WRITE-LINE 2 TIMES.
           MOVE CCVS-H-2A TO DUMMY-RECORD. PERFORM WRITE-LINE 2 TIMES.
           MOVE CCVS-H-2B TO DUMMY-RECORD. PERFORM WRITE-LINE 3 TIMES.
           MOVE CCVS-H-3  TO DUMMY-RECORD. PERFORM WRITE-LINE 3 TIMES.
       COLUMN-NAMES-ROUTINE.
           MOVE CCVS-C-1 TO DUMMY-RECORD. PERFORM WRITE-LINE.
           MOVE CCVS-C-2 TO DUMMY-RECORD. PERFORM WRITE-LINE 2 TIMES.
           MOVE HYPHEN-LINE TO DUMMY-RECORD. PERFORM WRITE-LINE.
       END-ROUTINE.
           MOVE HYPHEN-LINE TO DUMMY-RECORD. PERFORM WRITE-LINE 5 TIMES.
       END-RTN-EXIT.
           MOVE CCVS-E-1 TO DUMMY-RECORD. PERFORM WRITE-LINE 2 TIMES.
       END-ROUTINE-1.
            ADD ERROR-COUNTER TO ERROR-HOLD ADD INSPECT-COUNTER TO
            ERROR-HOLD. ADD DELETE-COUNTER TO ERROR-HOLD.
            ADD PASS-COUNTER TO ERROR-HOLD.
      *>      IF PASS-COUNTER EQUAL TO ERROR-HOLD GO TO END-ROUTINE-12.
            MOVE PASS-COUNTER TO CCVS-E-4-1.
            MOVE ERROR-HOLD TO CCVS-E-4-2.
            MOVE CCVS-E-4 TO CCVS-E-2-2.
            MOVE CCVS-E-2 TO DUMMY-RECORD PERFORM WRITE-LINE.
        END-ROUTINE-12.
            MOVE "TEST(S) FAILED" TO ENDER-DESC.
           IF       ERROR-COUNTER IS EQUAL TO ZERO
               MOVE "NO " TO ERROR-TOTAL
               ELSE
               MOVE ERROR-COUNTER TO ERROR-TOTAL.
           MOVE     CCVS-E-2 TO DUMMY-RECORD.
           PERFORM WRITE-LINE.
       END-ROUTINE-13.
           IF DELETE-COUNTER IS EQUAL TO ZERO
               MOVE "NO " TO ERROR-TOTAL  ELSE
               MOVE DELETE-COUNTER TO ERROR-TOTAL.
           MOVE "TEST(S) DELETED     " TO ENDER-DESC.
           MOVE CCVS-E-2 TO DUMMY-RECORD. PERFORM WRITE-LINE.
            IF   INSPECT-COUNTER EQUAL TO ZERO
                MOVE "NO " TO ERROR-TOTAL
            ELSE MOVE INSPECT-COUNTER TO ERROR-TOTAL.
            MOVE "TEST(S) REQUIRE INSPECTION" TO ENDER-DESC.
            MOVE CCVS-E-2 TO DUMMY-RECORD. PERFORM WRITE-LINE.
           MOVE CCVS-E-3 TO DUMMY-RECORD. PERFORM WRITE-LINE.
       WRITE-LINE.
           ADD 1 TO RECORD-COUNT.
      *>     IF RECORD-COUNT GREATER 50
      *>         MOVE DUMMY-RECORD TO DUMMY-HOLD
      *>         MOVE SPACE TO DUMMY-RECORD
      *>         WRITE DUMMY-RECORD AFTER ADVANCING PAGE
      *>         MOVE CCVS-C-1 TO DUMMY-RECORD PERFORM WRT-LN
      *>         MOVE CCVS-C-2 TO DUMMY-RECORD PERFORM WRT-LN 2 TIMES
      *>         MOVE HYPHEN-LINE TO DUMMY-RECORD PERFORM WRT-LN
      *>         MOVE DUMMY-HOLD TO DUMMY-RECORD
      *>         MOVE ZERO TO RECORD-COUNT.
           PERFORM WRT-LN.
       WRT-LN.
           WRITE    DUMMY-RECORD AFTER ADVANCING 1 LINES.
           MOVE SPACE TO DUMMY-RECORD.
       BLANK-LINE-PRINT.
           PERFORM WRT-LN.
       FAIL-ROUTINE.
           IF   COMPUTED-X NOT EQUAL TO SPACE GO TO FAIL-ROUTINE-WRITE.
           IF   CORRECT-X NOT EQUAL TO SPACE GO TO FAIL-ROUTINE-WRITE.
           MOVE   ANSI-REFERENCE TO INF-ANSI-REFERENCE.
           MOVE  "NO FURTHER INFORMATION, SEE PROGRAM." TO INFO-TEXT.
           MOVE   XXINFO TO DUMMY-RECORD. PERFORM WRITE-LINE 2 TIMES.
           MOVE   SPACES TO INF-ANSI-REFERENCE.
           GO TO  FAIL-ROUTINE-EX.
       FAIL-ROUTINE-WRITE.
           MOVE   TEST-COMPUTED TO PRINT-REC PERFORM WRITE-LINE
           MOVE   ANSI-REFERENCE TO COR-ANSI-REFERENCE.
           MOVE   TEST-CORRECT TO PRINT-REC PERFORM WRITE-LINE 2 TIMES.
           MOVE   SPACES TO COR-ANSI-REFERENCE.
       FAIL-ROUTINE-EX. EXIT.
       BAIL-OUT.
           IF     COMPUTED-A NOT EQUAL TO SPACE GO TO BAIL-OUT-WRITE.
           IF     CORRECT-A EQUAL TO SPACE GO TO BAIL-OUT-EX.
       BAIL-OUT-WRITE.
           MOVE CORRECT-A TO XXCORRECT. MOVE COMPUTED-A TO XXCOMPUTED.
           MOVE   ANSI-REFERENCE TO INF-ANSI-REFERENCE.
           MOVE   XXINFO TO DUMMY-RECORD. PERFORM WRITE-LINE 2 TIMES.
           MOVE   SPACES TO INF-ANSI-REFERENCE.
       BAIL-OUT-EX. EXIT.
       CCVS1-EXIT.
           EXIT.
      *> 
       SECT-IC222A-001 SECTION.
       CALL-INIT-1.
      *> ***************************************************************
      *>                                                               *
      *>     CALL A PROGRAM WHICH EXISTS AND FOR WHICH PARAMETERS      *
      *>     MATCH IN NUMBER AND TYPE.  EXECUTION SHOULD BE SUCCESSFUL *
      *>     AND THE STATEMENTS IN THE "ON EXCEPTION" PATH IGNORED.    *
      *>     THE STATEMENT FOLLOWING THE SCOPE TERMINATOR SHOULD BE    *
      *>     EXECUTED.                                                 *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE    1 TO REC-CT.
           MOVE   "CALL-TEST-1" TO PAR-NAME.
           MOVE   "AVAILABLE ON " TO FEATURE.
           MOVE    0 TO CALL-FLAG.
           MOVE   "P" TO EXCEPTION-PATH-FLAG.
           MOVE   "X-27 5.2.4 (2)" TO ANSI-REFERENCE.
           MOVE    ZERO TO DN3, DN4.
           GO TO   CALL-TEST-1-1.
       CALL-DELETE-1-1.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
      *> 
      *>     IF THIS TEST IS DELETED THEN ITS SUBORDINATE IS           *
      *>     AUTOMATICALLY DELETED.                                    *
      *> 
           GO TO   CALL-DELETE-1-2.
       CALL-TEST-1-1.
           CALL   "IC222A-1" USING DN1, DN2, DN3, DN4
                   ON EXCEPTION
                        MOVE "F" TO EXCEPTION-PATH-FLAG
           END-CALL
           MOVE    1 TO CALL-FLAG.
           IF EXCEPTION-PATH-FLAG NOT = "P"
                   MOVE "UNEXPECTED EXECUTION OF EXCEPTION PATH"
                            TO RE-MARK
                   MOVE "P" TO CORRECT-A
                   MOVE EXCEPTION-PATH-FLAG TO COMPUTED-A
                   PERFORM FAIL
           ELSE
                   PERFORM PASS.
       CALL-WRITE-1-1.
           PERFORM PRINT-DETAIL.
           ADD 1 TO REC-CT.
      *> 
       CALL-INIT-1-2.
           GO TO    CALL-TEST-1-2.
       CALL-DELETE-1-2.
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
           GO TO   CALL-EXIT-1.
      *> 
       CALL-TEST-1-2.
      *> ***************************************************************
      *>                                                               *
      *>     CHECKS THAT THE STATEMENT FOLLOWING THE SCOPE TERMINATOR  *
      *>     WAS EXECUTED.  IF THE PREVIOUS TEST PASSED, A PASS HERE   *
      *>     INDICATES THAT THE SCOPE TERMINATOR HAS BEEN INTERPRETED  *
      *>     CORRECTLY.  IF THE PREVIOUS TEST FAILED, A PASS HERE      *
      *>     INDICATES THAT THE SCOPE TERMINATOR WAS NOT INTERPRETED   *
      *>     AS "NOT ON EXCEPTION" OR "GO TO NEXT-SENTENCE".           *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           IF      CALL-FLAG = 1
                   PERFORM PASS
           ELSE
                   MOVE   "INCORRECT CONTROL FLOW" TO RE-MARK
                   MOVE    1 TO CORRECT-N
                   MOVE    CALL-FLAG TO COMPUTED-N
                   PERFORM FAIL.
           PERFORM PRINT-DETAIL.
      *> 
       CALL-EXIT-1.
      *> 
      *> 
       CALL-INIT-2.
      *> ***************************************************************
      *>                                                               *
      *>     CALL A PROGRAM WHICH DOES NOT EXIST.  PAGE X-28, 5.2.4,   *
      *>     RULE (3)A STATES THAT IF A PROGRAM CANNOT BE MADE         *
      *>     AVAILABLE THEN THE STATEMENTS IN THE "ON EXCEPTION"       *
      *>     PHRASE MUST BE EXECUTED.                                  *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE    1 TO REC-CT.
           MOVE   "CALL-TEST-2" TO PAR-NAME.
           MOVE   "NO PROGRAM ON " TO FEATURE.
           MOVE    0 TO CALL-FLAG.
           MOVE   "X" TO EXCEPTION-PATH-FLAG.
           MOVE   "X-28 5.2.4 (3)A" TO ANSI-REFERENCE.
           MOVE    ZERO TO DN3, DN4.
           GO TO   CALL-TEST-2-1.
       CALL-DELETE-2-1.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
      *> 
      *>     IF THIS TEST IS DELETED THEN ITS SUBORDINATE TEST IS      *
      *>     AUTOMATICALLY DELETED.                                    *
      *> 
           GO TO   CALL-DELETE-2-2.
       CALL-TEST-2-1.
      *>     CALL "NON-EXISTING-PROGRAM"
           CALL   "XXXXXXXX" USING DN1, DN2, DN3, DN4
                   ON EXCEPTION
                        MOVE "P" TO EXCEPTION-PATH-FLAG
           END-CALL
           MOVE    1 TO CALL-FLAG.
           IF EXCEPTION-PATH-FLAG NOT = "P"
                   MOVE "EXCEPTION SHOULD HAVE OCCURRED" TO RE-MARK
                   MOVE "P" TO CORRECT-A
                   MOVE EXCEPTION-PATH-FLAG TO COMPUTED-A
                   PERFORM FAIL
           ELSE
                   PERFORM PASS.
       CALL-WRITE-2-1.
           PERFORM PRINT-DETAIL.
           ADD 1 TO REC-CT.
      *> 
       CALL-INIT-2-2.
           GO TO    CALL-TEST-2-2.
       CALL-DELETE-2-2.
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
           GO TO   CALL-EXIT-2.
      *> 
       CALL-TEST-2-2.
      *> ***************************************************************
      *>                                                               *
      *>     CHECKS THAT THE STATEMENT FOLLOWING THE SCOPE TERMINATOR  *
      *>     WAS EXECUTED.  IF THE PREVIOUS TEST FAILED, A PASS HERE   *
      *>     INDICATES THAT THE SCOPE TERMINATOR HAS BEEN INTERPRETED  *
      *>     CORRECTLY.  IF THE PREVIOUS TEST PASSED, A PASS HERE      *
      *>     INDICATES THAT THE SCOPE TERMINATOR WAS NOT INTERPRETED   *
      *>     AS "NOT ON EXCEPTION" OR "GO TO NEXT-SENTENCE".           *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           IF      CALL-FLAG = 1
                   PERFORM PASS
           ELSE
                   MOVE   "INCORRECT CONTROL FLOW" TO RE-MARK
                   MOVE    1 TO CORRECT-N
                   MOVE    CALL-FLAG TO COMPUTED-N
                   PERFORM FAIL.
           PERFORM PRINT-DETAIL.
      *> 
       CALL-EXIT-2.
      *> 
      *> 
       CALL-INIT-3.
      *> ***************************************************************
      *>                                                               *
      *>     CALL A PROGRAM WHICH EXISTS, USING A CALL STATEMENT WITH  *
      *>     BOTH AN "ON EXCEPTION" PHRASE AND A "NOT ON EXCEPTION"    *
      *>     PHRASE.  EXECUTION SHOULD BE SUCCESSFUL, THE              *
      *>     "ON EXCEPTION" PHRASE IGNORED, AND THE STATEMENTS IN THE  *
      *>     "NOT ON EXCEPTION" PHRASE EXECUTED.  THE STATEMENT        *
      *>     FOLLOWING THE SCOPE TERMINATOR SHOULD BE EXECUTED.        *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE    1 TO REC-CT.
           MOVE   "CALL-TEST-3" TO PAR-NAME.
           MOVE   "AVAILABLE  ON NOT ON" TO FEATURE.
           MOVE    0 TO CALL-FLAG.
           MOVE   "X" TO EXCEPTION-PATH-FLAG.
           MOVE   "X-28 5.2.4 (2)" TO ANSI-REFERENCE.
           MOVE    ZERO TO DN3, DN4.
           GO TO   CALL-TEST-3-1.
       CALL-DELETE-3-1.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
      *> 
      *>     IF THIS TEST IS DELETED THEN ITS SUBORDINATE TEST IS      *
      *>     AUTOMATICALLY DELETED.                                    *
      *> 
           GO TO   CALL-DELETE-3-2.
       CALL-TEST-3-1.
           CALL   "IC222A-1" USING DN1, DN2, DN3, DN4
                   ON EXCEPTION
                        MOVE "F" TO EXCEPTION-PATH-FLAG
                        ADD 2 TO CALL-FLAG
                   NOT ON EXCEPTION
                        MOVE "P" TO EXCEPTION-PATH-FLAG
                        ADD 2 TO CALL-FLAG
           END-CALL
           ADD     1 TO CALL-FLAG.
           IF EXCEPTION-PATH-FLAG NOT = "P"
                   MOVE "NON-EXECUTION OF NOT EXCEPTION PATH"
                         TO RE-MARK
                   MOVE "P" TO CORRECT-A
                   MOVE EXCEPTION-PATH-FLAG TO COMPUTED-A
                   PERFORM FAIL
           ELSE
                   PERFORM PASS.
       CALL-WRITE-3-1.
           PERFORM PRINT-DETAIL.
           ADD 1 TO REC-CT.
      *> 
       CALL-INIT-3-2.
           GO TO    CALL-TEST-3-2.
       CALL-DELETE-3-2.
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
           GO TO   CALL-EXIT-3.
      *> 
       CALL-TEST-3-2.
      *> ***************************************************************
      *>                                                               *
      *>     CHECKS THAT THE STATEMENT FOLLOWING THE SCOPE TERMINATOR  *
      *>     WAS EXECUTED.  IF THE PREVIOUS TEST FAILED, A PASS HERE   *
      *>     INDICATES THAT THE SCOPE TERMINATOR HAS BEEN INTERPRETED  *
      *>     CORRECTLY.  IF THE PREVIOUS TEST PASSED, A PASS HERE      *
      *>     INDICATES THAT THE SCOPE TERMINATOR WAS NOT INTERPRETED   *
      *>     AS "NOT ON EXCEPTION" OR "GO TO NEXT-SENTENCE".           *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           IF      CALL-FLAG = 3
                   PERFORM PASS
           ELSE
                   MOVE   "INCORRECT CONTROL FLOW" TO RE-MARK
                   MOVE    3 TO CORRECT-N
                   MOVE    CALL-FLAG TO COMPUTED-N
                   PERFORM FAIL.
           PERFORM PRINT-DETAIL.
      *> 
       CALL-EXIT-3.
      *> 
      *> 
       CALL-INIT-4.
      *> ***************************************************************
      *>                                                               *
      *>     CALL A PROGRAM WHICH IS NOT AVAILABLE FOR EXECUTION,      *
      *>     USING A CALL STATEMENT WITH BOTH AN "ON EXCEPTION" PHRASE *
      *>     AND A "NOT ON EXCEPTION" PHRASE.  EXECUTION SHOULD BE     *
      *>     UNSUCCESSFUL, THE STATEMENTS IN THE "ON EXCEPTION" PHRASE *
      *>     EXECUTED, AND THE STATEMENTS IN THE "NOT ON EXCEPTION"    *
      *>     PHRASE IGNORED.  THE STATEMENT FOLLOWING THE SCOPE        *
      *>     TERMINATOR SHOULD BE EXECUTED IN EITHER CASE.             *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE    1 TO REC-CT.
           MOVE   "CALL-TEST-4" TO PAR-NAME.
           MOVE   "CALL ON EXCEPTION" TO FEATURE.
           MOVE    0 TO CALL-FLAG.
           MOVE   "X" TO EXCEPTION-PATH-FLAG.
           MOVE   "X-28 5.2.4 (3)A" TO ANSI-REFERENCE.
           MOVE    ZERO TO DN3, DN4.
           GO TO   CALL-TEST-4-1.
       CALL-DELETE-4-1.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
      *> 
      *>     IF THIS TEST IS DELETED THEN ITS SUBORDINATE TEST IS      *
      *>     AUTOMATICALLY DELETED.                                    *
      *> 
           GO TO   CALL-DELETE-4-2.
       CALL-TEST-4-1.
      *>     CALL   "NON-EXISTENT PROGRAM"
           CALL   "XXXXXXXX" USING DN1, DN2, DN3, DN4
                   ON EXCEPTION
                        MOVE "P" TO EXCEPTION-PATH-FLAG
                        ADD 2 TO CALL-FLAG
                   NOT ON EXCEPTION
                        MOVE "F" TO EXCEPTION-PATH-FLAG
                        ADD 2 TO CALL-FLAG
           END-CALL
           ADD     1 TO CALL-FLAG.
           IF EXCEPTION-PATH-FLAG NOT = "P"
                   MOVE "NON-EXECUTION OF EXCEPTION PATH"
                         TO RE-MARK
                   MOVE "P" TO CORRECT-A
                   MOVE EXCEPTION-PATH-FLAG TO COMPUTED-A
                   PERFORM FAIL
           ELSE
                   PERFORM PASS.
       CALL-WRITE-4-1.
           PERFORM PRINT-DETAIL.
           ADD 1 TO REC-CT.
      *> 
       CALL-INIT-4-2.
           GO TO    CALL-TEST-4-2.
       CALL-DELETE-4-2.
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
           GO TO   CALL-EXIT-4.
      *> 
       CALL-TEST-4-2.
      *> ***************************************************************
      *>                                                               *
      *>     CHECKS THAT THE STATEMENT FOLLOWING THE SCOPE TERMINATOR  *
      *>     WAS EXECUTED.  A PASS HERE ALSO INDICATES THAT ONE AND    *
      *>     ONLY ONE OF THE "ON EXCEPTION" AND "NOT ON EXCEPTION"     *
      *>     PHRASES OF THE PRECEDING CALL STATEMENT WAS EXECUTED.     *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           IF      CALL-FLAG = 3
                   PERFORM PASS
           ELSE
                   MOVE   "INCORRECT CONTROL FLOW" TO RE-MARK
                   MOVE    3 TO CORRECT-N
                   MOVE    CALL-FLAG TO COMPUTED-N
                   PERFORM FAIL.
           PERFORM PRINT-DETAIL.
      *> 
       CALL-EXIT-4.
      *> 
      *> 
       CALL-INIT-5.
      *> ***************************************************************
      *>                                                               *
      *>     CALL A PROGRAM WHICH IS AVAILABLE FOR EXECUTION, USING A  *
      *>     CALL STATEMENT WITH A "NOT ON EXCEPTION" PHRASE BUT NO    *
      *>     "ON EXCEPTION" PHRASE.  EXECUTION SHOULD BE SUCCESSFUL,   *
      *>     AND THE STATEMENTS IN THE "NOT ON EXCEPTION" PHRASE       *
      *>     EXECUTED.  THE STATEMENT FOLLOWING THE SCOPE TERMINATOR   *
      *>     SHOULD ALSO BE EXECUTED.                                  *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE    1 TO REC-CT.
           MOVE   "CALL-TEST-5" TO PAR-NAME.
           MOVE   "AVAILABLE  -- NOT ON" TO FEATURE.
           MOVE    0 TO CALL-FLAG.
           MOVE   "X" TO EXCEPTION-PATH-FLAG.
           MOVE   "X-28 5.2.4 (3)A" TO ANSI-REFERENCE.
           MOVE    ZERO TO DN3, DN4.
           GO TO   CALL-TEST-5-1.
       CALL-DELETE-5-1.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
      *> 
      *>     IF THIS TEST IS DELETED THEN ITS SUBORDINATE TEST IS      *
      *>     AUTOMATICALLY DELETED.                                    *
      *> 
           GO TO   CALL-DELETE-5-2.
       CALL-TEST-5-1.
           CALL   "IC222A-1" USING DN1, DN2, DN3, DN4
                   NOT ON EXCEPTION
                        MOVE "P" TO EXCEPTION-PATH-FLAG
                        ADD 2 TO CALL-FLAG
           END-CALL
           ADD     1 TO CALL-FLAG.
           IF EXCEPTION-PATH-FLAG NOT = "P"
                   MOVE "NON-EXECUTION OF NOT ON EXCEPTION PATH"
                         TO RE-MARK
                   MOVE "P" TO CORRECT-A
                   MOVE EXCEPTION-PATH-FLAG TO COMPUTED-A
                   PERFORM FAIL
           ELSE
                   PERFORM PASS.
       CALL-WRITE-5-1.
           PERFORM PRINT-DETAIL.
           ADD 1 TO REC-CT.
      *> 
       CALL-INIT-5-2.
           GO TO    CALL-TEST-5-2.
       CALL-DELETE-5-2.
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
           GO TO   CALL-EXIT-5.
      *> 
       CALL-TEST-5-2.
      *> ***************************************************************
      *>                                                               *
      *>     CHECKS THAT THE STATEMENT FOLLOWING THE SCOPE TERMINATOR  *
      *>     WAS EXECUTED.  A PASS HERE ALSO INDICATES THAT THE        *
      *>     "NOT ON EXCEPTION" PHRASE OF THE PRECEDING CALL STATEMENT *
      *>     WAS EXECUTED.                                             *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           IF      CALL-FLAG = 3
                   PERFORM PASS
           ELSE
                   MOVE   "INCORRECT CONTROL FLOW" TO RE-MARK
                   MOVE    3 TO CORRECT-N
                   MOVE    CALL-FLAG TO COMPUTED-N
                   PERFORM FAIL.
           PERFORM PRINT-DETAIL.
      *> 
       CALL-EXIT-5.
      *> 
      *> 
       CALL-INIT-6.
      *> ***************************************************************
      *>                                                               *
      *>     CALL A PROGRAM WHICH IS AVAILABLE FOR EXECUTION, USING A  *
      *>     CALL STATEMENT WITH NEITHER AN "ON EXCEPTION" PHRASE NOR  *
      *>     A "NOT ON EXCEPTION" PHRASE.  EXECUTION SHOULD BE         *
      *>     SUCCESSFUL. THE STATEMENT FOLLOWING THE SCOPE TERMINATOR  *
      *>     SHOULD BE EXECUTED.                                       *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE    1 TO REC-CT.
           MOVE   "CALL-TEST-6" TO PAR-NAME.
           MOVE   "AVAILABLE  -- ---" TO FEATURE.
           MOVE    0 TO CALL-FLAG.
           MOVE   "X" TO EXCEPTION-PATH-FLAG.
           MOVE   "X-28 5.2.4 (2)" TO ANSI-REFERENCE.
           MOVE    ZERO TO DN3, DN4.
           GO TO   CALL-TEST-6-1.
       CALL-DELETE-6-1.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
      *> 
      *>     IF THIS TEST IS DELETED THEN ITS SUBORDINATE TEST IS      *
      *>     AUTOMATICALLY DELETED.                                    *
      *> 
           GO TO   CALL-DELETE-6-2.
       CALL-TEST-6-1.
           CALL   "IC222A-1" USING DN1, DN2, DN3, DN4
           END-CALL
           ADD     1 TO CALL-FLAG.
           IF EXCEPTION-PATH-FLAG NOT = "X"
                   MOVE "EXCEPTION-PATH-FLAG ALTERED" TO RE-MARK
                   MOVE "X" TO CORRECT-A
                   MOVE EXCEPTION-PATH-FLAG TO COMPUTED-A
                   PERFORM FAIL
           ELSE
                   PERFORM PASS.
       CALL-WRITE-6-1.
           PERFORM PRINT-DETAIL.
           ADD 1 TO REC-CT.
      *> 
       CALL-INIT-6-2.
           GO TO    CALL-TEST-6-2.
       CALL-DELETE-6-2.
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
           GO TO   CALL-EXIT-6.
      *> 
       CALL-TEST-6-2.
      *> ***************************************************************
      *>                                                               *
      *>     CHECKS THAT THE STATEMENT FOLLOWING THE SCOPE TERMINATOR  *
      *>     WAS EXECUTED.                                             *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           IF      CALL-FLAG = 1
                   PERFORM PASS
           ELSE
                   MOVE   "INCORRECT CONTROL FLOW" TO RE-MARK
                   MOVE    1 TO CORRECT-N
                   MOVE    CALL-FLAG TO COMPUTED-N
                   PERFORM FAIL.
           PERFORM PRINT-DETAIL.
      *> 
       CALL-EXIT-6.
      *> 
      *> 
       CALL-INIT-7.
      *> ***************************************************************
      *>                                                               *
      *>     CALL A PROGRAM WHICH EXISTS AND FOR WHICH PARAMETERS      *
      *>     MATCH IN NUMBER AND TYPE.  THIS TEST IS A DUPLICATION OF  *
      *>     CALL-TEST-1, WITH "ON OVERFLOW" SUBSTITUTED FOR           *
      *>     "ON EXCEPTION" IN THE CALL STATEMENT.                     *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE    1 TO REC-CT.
           MOVE   "CALL-TEST-7" TO PAR-NAME.
           MOVE   "AVAILABLE  OV ---" TO FEATURE.
           MOVE    0 TO CALL-FLAG.
           MOVE   "P" TO EXCEPTION-PATH-FLAG.
           MOVE   "X-27 5.2.4 (2)" TO ANSI-REFERENCE.
           MOVE    ZERO TO DN3, DN4.
           GO TO   CALL-TEST-7-1.
       CALL-DELETE-7-1.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
      *> 
      *>     IF THIS TEST IS DELETED THEN ITS SUBORDINATE TEST IS      *
      *>     AUTOMATICALLY DELETED.                                    *
      *> 
           GO TO   CALL-DELETE-7-2.
       CALL-TEST-7-1.
           CALL   "IC222A-1" USING DN1, DN2, DN3, DN4
                   ON OVERFLOW
                        MOVE "F" TO EXCEPTION-PATH-FLAG
           END-CALL
           MOVE    1 TO CALL-FLAG.
           IF EXCEPTION-PATH-FLAG NOT = "P"
                   MOVE "UNEXPECTED EXECUTION OF EXCEPTION PATH"
                            TO RE-MARK
                   MOVE "P" TO CORRECT-A
                   MOVE EXCEPTION-PATH-FLAG TO COMPUTED-A
                   PERFORM FAIL
           ELSE
                   PERFORM PASS.
       CALL-WRITE-7-1.
           PERFORM PRINT-DETAIL.
           ADD 1 TO REC-CT.
      *> 
       CALL-INIT-7-2.
           GO TO    CALL-TEST-7-2.
       CALL-DELETE-7-2.
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
           GO TO   CALL-EXIT-7.
      *> 
       CALL-TEST-7-2.
      *> ***************************************************************
      *>                                                               *
      *>     CHECKS THAT THE STATEMENT FOLLOWING THE SCOPE TERMINATOR  *
      *>     WAS EXECUTED.  IF THE PREVIOUS TEST PASSED, A PASS HERE   *
      *>     INDICATES THAT THE SCOPE TERMINATOR HAS BEEN INTERPRETED  *
      *>     CORRECTLY.  IF THE PREVIOUS TEST FAILED, A PASS HERE      *
      *>     INDICATES THAT THE SCOPE TERMINATOR WAS NOT INTERPRETED   *
      *>     AS "NOT ON EXCEPTION" OR "GO TO NEXT-SENTENCE".           *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           IF      CALL-FLAG = 1
                   PERFORM PASS
           ELSE
                   MOVE   "INCORRECT CONTROL FLOW" TO RE-MARK
                   MOVE    1 TO CORRECT-N
                   MOVE    CALL-FLAG TO COMPUTED-N
                   PERFORM FAIL.
           PERFORM PRINT-DETAIL.
      *> 
       CALL-EXIT-7.
      *> 
      *> 
       CALL-INIT-8.
      *> ***************************************************************
      *>                                                               *
      *>     CALL A PROGRAM WHICH DOES NOT EXIST.  PAGE X-28, 5.2.4    *
      *>     RULE (3)A STATES THAT IF A PROGRAM CANNOT BE MADE        *
      *>     AVAILABLE THEN THE STATEMENTS IN THE "ON EXCEPTION" OR    *
      *>     "ON OVERFLOW" PHRASE MUST BE EXECUTED.  THIS TEST IS A    *
      *>     DUPLICATION OF CALL-TEST-2 WITH "ON OVERFLOW" SUBSTITUTED *
      *>     FOR "ON EXCEPTION" IN THE CALL STATEMENT.                 *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE    1 TO REC-CT.
           MOVE   "CALL-TEST-8" TO PAR-NAME.
           MOVE   "NO PROGRAM OV ---" TO FEATURE.
           MOVE    0 TO CALL-FLAG.
           MOVE   "X" TO EXCEPTION-PATH-FLAG.
           MOVE   "X-28 5.2.4 (3)A" TO ANSI-REFERENCE.
           MOVE    ZERO TO DN3, DN4.
           GO TO   CALL-TEST-8-1.
       CALL-DELETE-8-1.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
      *> 
      *>     IF THIS TEST IS DELETED THEN ITS SUBORDINATE TEST IS      *
      *>     AUTOMATICALLY DELETED.                                    *
      *> 
           GO TO   CALL-DELETE-8-2.
       CALL-TEST-8-1.
      *>     CALL "NON-EXISTING-PROGRAM"
           CALL   "XXXXXXXX" USING DN1, DN2, DN3, DN4
                   ON OVERFLOW
                        MOVE "P" TO EXCEPTION-PATH-FLAG
           END-CALL
           MOVE    1 TO CALL-FLAG.
           IF EXCEPTION-PATH-FLAG NOT = "P"
                   MOVE "EXCEPTION SHOULD HAVE OCCURRED" TO RE-MARK
                   MOVE "P" TO CORRECT-A
                   MOVE EXCEPTION-PATH-FLAG TO COMPUTED-A
                   PERFORM FAIL
           ELSE
                   PERFORM PASS.
       CALL-WRITE-8-1.
           PERFORM PRINT-DETAIL.
           ADD 1 TO REC-CT.
      *> 
       CALL-INIT-8-2.
           GO TO    CALL-TEST-8-2.
       CALL-DELETE-8-2.
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           PERFORM DE-LETE.
           PERFORM PRINT-DETAIL.
           ADD     1 TO REC-CT.
           GO TO   CALL-EXIT-8.
      *> 
       CALL-TEST-8-2.
      *> ***************************************************************
      *>                                                               *
      *>     CHECKS THAT THE STATEMENT FOLLOWING THE SCOPE TERMINATOR  *
      *>     WAS EXECUTED.  IF THE PREVIOUS TEST FAILED, A PASS HERE   *
      *>     INDICATES THAT THE SCOPE TERMINATOR HAS BEEN INTERPRETED  *
      *>     CORRECTLY.  IF THE PREVIOUS TEST PASSED, A PASS HERE      *
      *>     INDICATES THAT THE SCOPE TERMINATOR WAS NOT INTERPRETED   *
      *>     AS "NOT ON EXCEPTION" OR "GO TO NEXT-SENTENCE".           *
      *>                                                               *
      *> ***************************************************************
      *> 
           MOVE   "END-CALL OBSERVANCE" TO FEATURE.
           IF      CALL-FLAG = 1
                   PERFORM PASS
           ELSE
                   MOVE   "INCORRECT CONTROL FLOW" TO RE-MARK
                   MOVE    1 TO CORRECT-N
                   MOVE    CALL-FLAG TO COMPUTED-N
                   PERFORM FAIL.
           PERFORM PRINT-DETAIL.
      *> 
       CALL-EXIT-8.
      *> 
      *> 
       CCVS-EXIT SECTION.
       CCVS-999999.
           GO TO CLOSE-FILES.
       END PROGRAM IC222A.
       IDENTIFICATION DIVISION.
       PROGRAM-ID.
           IC222A-1.
      *> ***************************************************************
      *>                                                               *
      *>     THIS PROGRAM FORMS PART OF THE COBOL COMPILER VALIDATION  *
      *>     SYSTEM (CCVS) USED TO TEST COBOL COMPILERS FOR            *
      *>     CONFORMANCE WITH THE AMERICAN NATIONAL STANDARD           *
      *>     (ANSI DOCUMENT REFERENCE: X3.23-1985) AND THE STANDARD OF *
      *>     THE INTERNATIONAL ORGANIZATION FOR STANDARDISATION        *
      *>     (ISO DOCUMENT REFERENCE: ISO-1989-1985).                  *
      *>                                                               *
      *>     THIS CCVS INCORPORATES ENHANCEMENTS TO THE CCVS FOR THE   *
      *>     1974 STANDARD (ANSI DOCUMENT REFERENCE: X3.23-1974; ISO   *
      *>     DOCUMENT REFERENCE: ISO-1989-1978).                       *
      *>                                                               *
      *>     THESE ENHANCEMENTS WERE SPECIFIED BY A PROJECT TEAM WHICH *
      *>     WAS FUNDED BY THE COMMISSION FOR EUROPEAN COMMUNITIES AND *
      *>     WHICH WAS RESPONSIBLE FOR TECHNICAL ISSUES TO:            *
      *>                                                               *
      *>           THE FEDERAL SOFTWARE TESTING CENTER                 *
      *>           OFFICE OF SOFTWARE DEVELOPMENT                      *
      *>                 & INFORMATION TECHNOLOGY                      *
      *>           TWO SKYLINE PLACE                                   *
      *>           SUITE 1100                                          *
      *>           5203 LEESBURG PIKE                                  *
      *>           FALLS CHURCH                                        *
      *>           VA 22041                                            *
      *>           U.S.A.                                              *
      *>                                                               *
      *>     THE PROJECT TEAM MEMBERS WERE:                            *
      *>                                                               *
      *>           BIADI (BUREAU INTER ADMINISTRATION                  *
      *>                  DE DOCUMENTATION INFORMATIQUE)               *
      *>           21 RUE BARA                                         *
      *>           F-92132 ISSY                                        *
      *>           FRANCE                                              *
      *>                                                               *
      *>                                                               *
      *>           GMD (GESELLSCHAFT FUR MATHEMATIK                    *
      *>                UND DATENVERARBEITUNG MBH)                     *
      *>           SCHLOSS BIRLINGHOVEN                                *
      *>           POSTFACH 12 40                                      *
      *>           D-5205 ST. AUGUSTIN 1                               *
      *>           GERMANY FR                                          *
      *>                                                               *
      *>                                                               *
      *>           NCC (THE NATIONAL COMPUTING CENTRE LTD)             *
      *>           OXFORD ROAD                                         *
      *>           MANCHESTER                                          *
      *>           M1 7ED                                              *
      *>           UNITED KINGDOM                                      *
      *>                                                               *
      *>                                                               *
      *>     THIS TEST SUITE WAS PRODUCED BY THE NATIONAL COMPUTING    *
      *>     CENTRE IN ENGLAND AND IS THE OFFICIAL CCVS TEST SUITE     *
      *>     USED THROUGHOUT EUROPE AND THE UNITED STATES OF AMERICA.  *
      *>                                                               *
      *>     REVISED 1986 AUGUST                                       *
      *>                                                               *
      *> ***************************************************************
      *>                                                               *
      *>     VALIDATION FOR:-                                          *
      *>                                                               *
      *>     "ON-SITE VALIDATION, NATIONAL INSTITUTE OF STD & TECH.     ".
      *>                                                               *
      *>     "COBOL 85 VERSION 4.2, Apr  1993 SSVG                      ".
      *>                                                               *
      *> ***************************************************************
      *>                                                               *
      *>       X-CARDS USED BY THIS PROGRAM ARE :-                     *
      *>                                                               *
      *>             X-82   SOURCE-COMPUTER                            *
      *>             X-83   OBJECT-COMPUTER.                           *
      *>                                                               *
      *> ***************************************************************
      *>                                                               *
      *>     THE SOURCE FILE CONTAINS TWO PROGRAMS, IC222A AND         *
      *>     IC222A-1, WHICH TEST LANGUAGE ELEMENTS FROM  LEVEL 2 OF   *
      *>     THE INTER-PROGRAM COMMUNICATION MODULE.  THE LANGUAGE     *
      *>     ELEMENTS TESTED ARE:                                      *
      *>           "ON EXCEPTION"     PHRASE                           *
      *>           "NOT ON EXCEPTION" PHRASE                           *
      *>           "END-CALL"         PHRASE                           *
      *>           "ON OVERFLOW"      PHRASE                           *
      *> 
      *>     THE TWO PROGRAMS SHOULD BE COMPILED IN THE SAME           *
      *>     INVOCATION OF THE COMPILER TO TEST THE BATCH COMPILATION  *
      *>     FEATURE AND RECOGNITION OF THE END PROGRAM HEADER.  THE   *
      *>     ARRANGEMENT OF THE PROGRAMS IN THE SOURCE FILE IS:
      *> 
      *>     IDENTIFICATION DIVISION.
      *>     PROGRAM-ID. IC222A.
      *>           .
      *>           .
      *>           .
      *>     END PROGRAM IC222A.
      *>     IDENTIFICATION DIVISION.
      *>     PROGRAM-ID. IC222A-1.
      *>           .
      *>           .
      *>           .
      *> 
      *>     A FULL DESCRIPTION OF THE TWO PROGRAMS IS INCLUDED AS     *
      *>     COMMENTS IN PROGRAM IC222A.                               *
      *>                                                               *
      *> ***************************************************************
      *> 
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER.
           XXXXX082.
       OBJECT-COMPUTER.
           XXXXX083.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT PRINT-FILE ASSIGN TO
           XXXXX055.
      *> 
       DATA DIVISION.
       FILE SECTION.
       FD  PRINT-FILE.
       01  PRINT-REC PICTURE X(120).
       01  DUMMY-RECORD PICTURE X(120).
       WORKING-STORAGE SECTION.
       77  WS1 PICTURE S999.
       77  WS2 PICTURE S999
               USAGE COMPUTATIONAL, VALUE ZERO.
       LINKAGE SECTION.
       77  DN1 PICTURE S99.
       77  DN2 PICTURE S99 USAGE COMPUTATIONAL.
       77  DN3 PICTURE S99.
       77  DN4 PICTURE S99 USAGE COMPUTATIONAL.
      *> 
       PROCEDURE DIVISION USING DN1, DN2, DN3, DN4.
       SECT-IC222A-1-001 SECTION.
       CALL-TEST-001.
           MOVE DN1 TO WS1.
           ADD 1 TO WS1.
           ADD 1 TO WS2.
           MOVE WS1 TO DN3.
           MOVE WS2 TO DN4.
       CALL-EXIT-001.
           EXIT PROGRAM.
      *> END-OF,IC222A