       IDENTIFICATION                    DIVISION.
      *> *****************************************************************
      *> P    ユーザー名      ＸＸＸ工業株式会社殿
      *> P    システム名      移管システム
      *> P    プログラム名称  ＢＢ２１付替金額補正データ生成
      *> P    プログラムＩＤ  LBLI0420.
      *> P    機能概要        月頭稼動日のみ金額を再計算し、
      *> P                    差異があるものは逆伝票で取消し、再計上する。
      *> P
      *> P    作成者          高橋
      *> P    作成日          04.10.18
      *> P    更新日          XX.XX.XX
      *> P    版              VER.001
      *> *****************************************************************
       PROGRAM-ID.                       LBLI0420.
       AUTHOR. *>CE                           HITACHI.
      *>CE ** 入出力ファイル：
      *>CE **
      *>CE **  I00 : 付替情報ﾕﾆｰｸKEY採番ﾌｧｲﾙ (IN)
      *>CE **  I01 : 業務日付ﾌｧｲﾙ            (IN)
      *>CE **  I02 : 請求処理日付ﾌｧｲﾙ        (IN)
      *>CE **  D00 : 新日付ﾏｽﾀ               (IN)
      *>CE **  D01 : 一般諸元ﾏｽﾀ             (IN)
      *>CE **  D02 : 新取引先ﾏｽﾀ             (IN)
      *>CE **  D03 : 会計ＤＰ用ＩＦﾃｰﾌﾞﾙ     (IN/OUT)
      *>CE **  O30 : 付替情報ﾕﾆｰｸKEY採番ﾌｧｲﾙ (OUT)
      *>CE **
       ENVIRONMENT                       DIVISION.
       CONFIGURATION                     SECTION.
       SOURCE-COMPUTER.                  3500.
       OBJECT-COMPUTER.                  3500.
       SPECIAL-NAMES.
                                         C01  IS  PCHANGE.
       INPUT-OUTPUT                      SECTION.
       FILE-CONTROL.
         SELECT  I00
             ASSIGN    TO       UT-SYS100
             ORGANIZATION LINE SEQUENTIAL.
         SELECT  I01
             ASSIGN    TO       UT-SYS101
             ORGANIZATION LINE SEQUENTIAL.
         SELECT  I02
             ASSIGN    TO       UT-SYS102
             ORGANIZATION LINE SEQUENTIAL.
         SELECT  O30
             ASSIGN    TO       UT-SYS300.
      *> *
       DATA                              DIVISION.
       FILE                              SECTION.
       FD   I00.
           COPY  rlbliw06                PREFIXING  I00-.
       FD   I01.
           COPY  rlbebw03                PREFIXING  I01-.
       FD   I02.
           COPY  rlbebw03                PREFIXING  I02-.
       FD   O30.
           COPY  rlbliw06                PREFIXING  O30-.
         02  O30-NEWLINE                 PIC  X(01).
      *> *****************************************************************
       WORKING-STORAGE                   SECTION.
      *> *****************************************************************
      *> D   日付エリア
       01  W-HIZUKE.
         03  W-DATE.
           05  W-D-YYYY.
             07  W-D-YY-U2               PIC  X(02).
             07  W-D-YY-L2               PIC  X(02).
           05  W-D-MM                    PIC  X(02).
           05  W-D-DD                    PIC  X(02).
         03  W-TIME.
           05  W-T-HH                    PIC  X(02).
           05  W-T-MM                    PIC  X(02).
           05  W-T-SS                    PIC  X(02).
           05  W-T-SS100                 PIC  X(02).
         03  FILLER                      PIC  X(05).
      *> D   業務日付エリア
       01  GYOMU-YYMD.
         03  GYOMU-YYM.
           05  GYOMU-YY                  PIC  X(4).
           05  GYOMU-MM                  PIC  X(2).
         03  GYOMU-DD                    PIC  X(2).
      *> D   請求処理日付エリア
       01  SEIKYU-YYMD.
         03  SEIKYU-YYM.
           05  SEIKYU-YY                 PIC  X(4).
           05  SEIKYU-MM                 PIC  X(2).
         03  SEIKYU-DD                   PIC  X(2).
      *> *
      *> *****************************************************************
      *> D  ＡＢＥＮＤメッセージ
       01  MSG-ABN-AREA.
         03  MSG-ABN0.
           05  FILLER                    PIC  X(15)  VALUE ALL '*'.
           05  FILLER                    PIC  X(19)
                                          VALUE 'ABEND ﾒｯｾｰｼﾞ  START'.
           05  FILLER                    PIC  X(16)  VALUE ALL '*'.
      *> L プログラムＩＤ
         03  MSG-ABN1.
           05  FILLER                    PIC  X(05)  VALUE ALL '*'.
           05  ABN-PGMID                 PIC  X(08)  VALUE SPACE.
           05  FILLER                    PIC  X(37)  VALUE ALL '*'.
      *> L セクション名
         03  MSG-ABN2.
           05  FILLER                    PIC  X(05)  VALUE ALL '*'.
           05  ABN-SEC                   PIC  X(30)  VALUE SPACE.
           05  FILLER                    PIC  X(15)  VALUE ALL '*'.
      *> L アベンドコード
         03  MSG-ABN3.
           05  FILLER                    PIC  X(05)  VALUE ALL '*'.
           05  FILLER                    PIC  X(13)
                                          VALUE 'ｱﾍﾞﾝﾄﾞｺｰﾄﾞ = '.
           05  ABN-CD                    PIC  ----9.
           05  FILLER                    PIC  X(27)  VALUE ALL '*'.
      *> L アクセスＫＥＹ
         03  MSG-ABN4.
           05  FILLER                    PIC  X(05)  VALUE ALL '*'.
           05  ABN-KEY                   PIC  X(20)  VALUE SPACE.
           05  FILLER                    PIC  X(25)  VALUE ALL '*'.
      *> L コメント１
         03  MSG-ABN5.
           05  FILLER                    PIC  X(05)  VALUE ALL '*'.
           05  ABN-CMT1                  PIC  X(40)  VALUE SPACE.
           05  FILLER                    PIC  X(05)  VALUE ALL '*'.
      *> L コメント２
         03  MSG-ABN6.
           05  FILLER                    PIC  X(05)  VALUE ALL '*'.
           05  ABN-CMT2                  PIC  X(40)  VALUE SPACE.
           05  FILLER                    PIC  X(05)  VALUE ALL '*'.
      *> L コメント３
         03  MSG-ABN7.
           05  FILLER                    PIC  X(05)  VALUE ALL '*'.
           05  ABN-CMT3                  PIC  X(40)  VALUE SPACE.
           05  FILLER                    PIC  X(05)  VALUE ALL '*'.
      *> L アベンドメッセージ終了
         03  MSG-ABN8.
           05  FILLER                    PIC  X(10)  VALUE ALL '*'.
           05  FILLER                    PIC  X(17)
                                          VALUE 'ABEND ﾒｯｾｰｼﾞ  END'.
           05  FILLER                    PIC  X(23)  VALUE ALL '*'.
      *> *
      *> D   開始メッセージ
       01  MSG-START.
         03  FILLER                      PIC  X(10)  VALUE '       ***'.
         03  START-PGMID                 PIC  X(10)  VALUE SPACE.
         03  FILLER                      PIC  X(10)  VALUE ' START ***'.
      *> *
      *> D   終了メッセージ
       01  MSG-END.
         03  FILLER                      PIC  X(10)  VALUE '       ***'.
         03  END-PGMID                   PIC  X(10)  VALUE SPACE.
         03  FILLER                      PIC  X(10)  VALUE '  END  ***'.
      *> *
      *> D   メッセージ
       01  MSG.
      *> D   入出力件数メッセージ
         03  I00-MSG.
           05  FILLER                    PIC  X(30)
                                       VALUE '付替情報ﾕﾆｰｸKEY採番ﾌｧｲﾙ'.
           05  FILLER                    PIC  X(20)
                                       VALUE '入力レコード件数 = '.
           05  I00-IN                    PIC  ZZZ,ZZZ,ZZ9.
         03  I01-MSG.
           05  FILLER                    PIC  X(30)
                                       VALUE '業務日付ﾌｧｲﾙ'.
           05  FILLER                    PIC  X(20)
                                       VALUE '入力レコード件数 = '.
           05  I01-IN                    PIC  ZZZ,ZZZ,ZZ9.
         03  I02-MSG.
           05  FILLER                    PIC  X(30)
                                       VALUE '請求処理日付ﾌｧｲﾙ'.
           05  FILLER                    PIC  X(20)
                                       VALUE '入力レコード件数 = '.
           05  I02-IN                    PIC  ZZZ,ZZZ,ZZ9.
         03  D00-MSG.
           05  FILLER                    PIC  X(30)
                                       VALUE '新日付ﾏｽﾀ'.
           05  FILLER                    PIC  X(20)
                                       VALUE '入力レコード件数 = '.
           05  D00-IN                    PIC  ZZZ,ZZZ,ZZ9.
         03  D01-MSG.
           05  FILLER                    PIC  X(30)
                                       VALUE '一般諸元ﾏｽﾀ'.
           05  FILLER                    PIC  X(20)
                                       VALUE '入力レコード件数 = '.
           05  D01-IN                    PIC  ZZZ,ZZZ,ZZ9.
         03  D02-MSG.
           05  FILLER                    PIC  X(30)
                                       VALUE '新取引先ﾏｽﾀ'.
           05  FILLER                    PIC  X(20)
                                       VALUE '入力レコード件数 = '.
           05  D02-IN                    PIC  ZZZ,ZZZ,ZZ9.
         03  D03-MSG-IN.
           05  FILLER                    PIC  X(30)
                                       VALUE '会計ＤＰ用ＩＦﾃｰﾌﾞﾙ'.
           05  FILLER                    PIC  X(20)
                                       VALUE '入力レコード件数 = '.
           05  D03-IN                    PIC  ZZZ,ZZZ,ZZ9.
         03  D03-MSG-OUT.
           05  FILLER                    PIC  X(30)
                                       VALUE '会計ＤＰ用ＩＦﾃｰﾌﾞﾙ'.
           05  FILLER                    PIC  X(20)
                                       VALUE '出力レコード件数 = '.
           05  D03-OUT                   PIC  ZZZ,ZZZ,ZZ9.
         03  O30-MSG.
           05  FILLER                    PIC  X(30)
                                       VALUE '付替情報ﾕﾆｰｸKEY採番ﾌｧｲﾙ'.
           05  FILLER                    PIC  X(20)
                                       VALUE '出力レコード件数 = '.
           05  O30-OUT                   PIC  ZZZ,ZZZ,ZZ9.
      *> *****************************************************************
      *> *
       01  CONTANT-AREA.
      *> D プログラム名
         03  PGMID                       PIC  X(08)  VALUE 'LBLI0420'.
      *> D 改行コード
         03  CN-NEWLINE                  PIC  X(01)  VALUE X'0A'.
      *> D アベンドコード
         03  ABEND-CODE                  PIC S9(04)  USAGE  COMP.
      *> D ＥＯＦ
         03  CN-EOF                      PIC  X(03)  VALUE 'EOF'.
      *> *
      *> *****************************************************************
      *>                                                                 *
      *>    ワーク  エリア                                               *
      *>                                                                 *
      *> *****************************************************************
       01  CNT-AREA.
      *> D 件数カウント
         03  I00-IN-CNT                  PIC  9(09)  VALUE ZERO.
         03  I01-IN-CNT                  PIC  9(09)  VALUE ZERO.
         03  I02-IN-CNT                  PIC  9(09)  VALUE ZERO.
         03  D00-IN-CNT                  PIC  9(09)  VALUE ZERO.
         03  D01-IN-CNT                  PIC  9(09)  VALUE ZERO.
         03  D02-IN-CNT                  PIC  9(09)  VALUE ZERO.
         03  D03-IN-CNT                  PIC  9(09)  VALUE ZERO.
         03  D03-OUT-CNT                 PIC  9(09)  VALUE ZERO.
         03  O30-OUT-CNT                 PIC  9(09)  VALUE ZERO.
      *> *
       01  WORK-AREA.
      *> D  エンドフラグ
         03  I00-END-FLG                 PIC  X(03)  VALUE SPACE.
         03  I01-END-FLG                 PIC  X(03)  VALUE SPACE.
         03  I02-END-FLG                 PIC  X(03)  VALUE SPACE.
         03  D00-END-FLG                 PIC  X(03)  VALUE SPACE.
         03  D03-END-FLG                 PIC  X(03)  VALUE SPACE.
      *> D  計算ワーク
         03  WK-KEISU                    PIC  9(05)  VALUE ZERO.
         03  WK-TANKA                    PIC  S9(9)  VALUE ZERO.
         03  WK-KINGAKU                  PIC  S9(9)  VALUE ZERO.
      *> *
      *> D  データベースアクセスSQLCAエリア
           COPY  sqlca2.
      *> *
      *> D  データベースアクセスパラメタエリア
           COPY  rlbedd00  PREFIXING XDATBAS-.
      *> *
      *> D  データベースアクセス定数エリア
           COPY  rlbedc01.
      *> *
      *> D  データベースユーザテーブルエリア
      *> *   新日付ﾏｽﾀ
           COPY  rlbedd07  PREFIXING D00-.
      *> *   一般諸元ﾏｽﾀ
           COPY  rlbedd01  PREFIXING D01-.
      *> *   新取引先ﾏｽﾀ
           COPY  rlbedd04  PREFIXING D02-.
      *> *   会計ＤＰ用ＩＦﾃｰﾌﾞﾙ（入力用）
           COPY  rlbldd1c  PREFIXING D03-.
      *> *   会計ＤＰ用ＩＦﾃｰﾌﾞﾙ（出力用）
           COPY  rlbldd1c  PREFIXING W03-.
      *> *
      *> D   ＤＢアクセスキーワーク
       01  K00-KEY-BU.
         03  K00-YYYY                    PIC  X(4).
         03  K00-MM                      PIC  X(2).
         03  K00-DD                      PIC  X(2).
       01  K01-KEY-BU.
         03  K01-P-NO                    PIC  X(15).
       01  K02-KEY-BU.
         03  K02-TAIBETSU                PIC  X(1).
         03  K02-TOKUYAKU                PIC  X(4).
         03  K02-EIGYO-CD                PIC  X(3).
       01  K03-KEY-BU.
         03  K03-SHORI-YYMD              PIC  X(8).
         03  K03-SHORI-SEQ               PIC  X(5).
         03  K03-KEIJYO-YYM              PIC  X(6).
         03  K03-DATA-NO                 PIC  X(4).
      *> *
       PROCEDURE                          DIVISION.
      *> *****************************************************************
      *>                                                                 *
      *>     メイン処理                                                  *
      *>                                                                 *
      *> *****************************************************************
       MAIN-PROC                          SECTION.
      *> G   メイン処理
           MOVE  'MAIN-PROC'          TO  ABN-SEC
      *> *
           PERFORM  START-PROC
      *> *   納品請求日のみ処理
           IF ( D00-END-FLG  NOT =  CN-EOF )
             THEN
               PERFORM  D03-FETCH-PROC
               PERFORM  UNTIL D03-END-FLG = CN-EOF
                   PERFORM  HANTEI-PROC
                   PERFORM  D03-FETCH-PROC
               END-PERFORM
               PERFORM  D03-CLOSE-PROC
           END-IF
           PERFORM  END-PROC
      *> *
           MOVE  ZERO  TO  RETURN-CODE
           STOP RUN.
      *> *
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     準備処理                                                    *
      *>                                                                 *
      *> *****************************************************************
       START-PROC                         SECTION.
      *> G   準備処理
           MOVE  'START-PROC'         TO  ABN-SEC
      *> *
           MOVE  PGMID                TO  START-PGMID
                                          END-PGMID
                                          ABN-PGMID
      *> *
           DISPLAY  MSG-START       UPON  SYSOUT
      *> *
      *> *   日付設定
           MOVE  FUNCTION  CURRENT-DATE  TO  W-HIZUKE
      *> *
      *> *   ＤＢ接続
           PERFORM  DB-SINON-PROC
      *> *
           OPEN     INPUT     I00
           OPEN     INPUT     I01
           OPEN     INPUT     I02
           OPEN     OUTPUT    O30
      *> *   付替情報ﾕﾆｰｸKEY取得
           PERFORM  I00-READ-PROC
      *> *   業務日付取得
           PERFORM  I01-READ-PROC
      *> *   請求処理日付取得
           PERFORM  I02-READ-PROC
      *> *   納品請求処理日判定
           PERFORM  D00-CHECK-PROC
           IF ( D00-END-FLG  =  CN-EOF )
             THEN
      *> *       請求日ではない＝処理しない
               CONTINUE
             ELSE
      *> *       会計ＤＰ用ＩＦﾃｰﾌﾞﾙｵｰﾌﾟﾝ
               PERFORM  D03-OPEN-PROC
           END-IF
      *> *
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     ＤＢ接続処理                                                *
      *>                                                                 *
      *> *****************************************************************
       DB-SINON-PROC                      SECTION.
      *> G   ＤＢ接続処理
           MOVE  'DB-SINON-PROC'      TO  ABN-SEC
      *> *
           MOVE  SPACE                TO  XDATBAS-DIA
           CALL  'LBED0000'        USING  SINON
                                      　　XDATBAS-DIA
                                          SQLCA
      *> *
           IF ( XDATBAS-STAT  = CN-XDATBAS-OK )
             THEN
                 CONTINUE
             ELSE
                 MOVE  'ＤＢ接続エラー'  TO  ABN-CMT1
                 PERFORM  DB-ERR-PROC
           END-IF
      *> *
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     I00 付替情報ﾕﾆｰｸKEY取得                                     *
      *>                                                                 *
      *> *****************************************************************
      *> *
       I00-READ-PROC                      SECTION.
           MOVE  'I00-READ-PROC'      TO  ABN-SEC
           READ  I00
             AT END
                MOVE  CN-EOF          TO  I00-END-FLG
           END-READ
           IF ( I00-END-FLG  =  SPACE )
             THEN
               DISPLAY ' UNIQE-KEY  = ' I00-RLBLIW06-AREA
               ADD   1                TO  I00-IN-CNT
             ELSE
               MOVE  255              TO  ABEND-CODE
               MOVE  '付替情報採番ファイルデータなし'  TO  ABN-CMT1
               PERFORM  ABEND-PROC
           END-IF
           IF  ( I00-SHO-YMD IS NOT NUMERIC )  OR
               ( I00-SHO-MM     <   01      )  OR
               ( I00-SHO-MM     >   12      )  OR
               ( I00-SHO-DD     <   01      )  OR
               ( I00-SHO-DD     >   31      )  OR
               ( I00-SHO-SEQ IS NOT NUMERIC )
            THEN
              MOVE  255               TO  ABEND-CODE
              MOVE  '付替情報採番ファイルデータ不正'  TO  ABN-CMT1
              PERFORM  ABEND-PROC
            ELSE
              MOVE  I00-RLBLIW06-AREA TO  O30-RLBLIW06-AREA
           END-IF
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     I01 業務日付取得                                            *
      *>                                                                 *
      *> *****************************************************************
      *> *
       I01-READ-PROC                      SECTION.
           MOVE  'I01-READ-PROC'      TO  ABN-SEC
           READ  I01
             AT END
                MOVE  CN-EOF          TO  I01-END-FLG
           END-READ
           IF ( I01-END-FLG  =  SPACE )
             THEN
               DISPLAY ' GYOMU-YMD  = ' I01-SHORI-YYMD1
               ADD   1                TO  I01-IN-CNT
             ELSE
               MOVE  255              TO  ABEND-CODE
               MOVE  '業務日付ファイルデータなし'  TO  ABN-CMT1
               PERFORM  ABEND-PROC
           END-IF
           IF  ( I01-SHORI-YYMD1 IS NOT NUMERIC )  OR
               ( I01-SHORI-MM1      <   01      )  OR
               ( I01-SHORI-MM1      >   12      )
            THEN
              MOVE  255                   TO  ABEND-CODE
              MOVE  '業務日付ファイルデータ不正'  TO  ABN-CMT1
              PERFORM  ABEND-PROC
            ELSE
              MOVE  I01-SHORIBI-YYMD  TO  GYOMU-YYMD
           END-IF
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     I02 請求処理日付取得                                        *
      *>                                                                 *
      *> *****************************************************************
      *> *
       I02-READ-PROC                      SECTION.
           MOVE  'I02-READ-PROC'      TO  ABN-SEC
           READ  I02
             AT END
                MOVE  CN-EOF          TO  I02-END-FLG
           END-READ
           IF ( I02-END-FLG  =  SPACE )
             THEN
               DISPLAY ' SEIKYU-YMD = ' I02-SHORI-YYMD1
               ADD   1                TO  I02-IN-CNT
             ELSE
               MOVE  255              TO  ABEND-CODE
               MOVE  '請求処理日付ファイルデータなし'  TO  ABN-CMT1
               PERFORM  ABEND-PROC
           END-IF
           IF  ( I02-SHORI-YYMD1 IS NOT NUMERIC )  OR
               ( I02-SHORI-MM1      <   01      )  OR
               ( I02-SHORI-MM1      >   12      )
            THEN
              MOVE  255                   TO  ABEND-CODE
              MOVE  '請求処理日付ファイルデータ不正'  TO  ABN-CMT1
              PERFORM  ABEND-PROC
            ELSE
              MOVE  I02-SHORIBI-YYMD  TO  SEIKYU-YYMD
           END-IF
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     D00 納品請求処理日判定                                      *
      *>                                                                 *
      *> *****************************************************************
       D00-CHECK-PROC                     SECTION.
           MOVE  'D00-CHECK-PROC'     TO  ABN-SEC
           MOVE  SPACE                TO  K00-KEY-BU
           MOVE  GYOMU-YYMD           TO  K00-KEY-BU
           MOVE  '00'                 TO  K00-DD
      *> G   業務年月＋日(00)で新日付マスタを昇順にオープン
           CALL  'LBLI042A'        USING  OPN-M
                                          XDATBAS-DIA
                                          D00-RLBEDD07-AREA
                                          K00-KEY-BU
                                          SQLCA
           EVALUATE  XDATBAS-STAT
             WHEN    CN-XDATBAS-OK
                 CONTINUE
             WHEN    OTHER
                 MOVE  K00-KEY-BU                    TO  ABN-KEY
                 MOVE  '新日付マスタオープンエラー'  TO  ABN-CMT1
                 MOVE  XDATBAS-STAT                  TO  ABN-CMT2
                 PERFORM  DB-ERR-PROC
           END-EVALUATE
      *> *
      *> G   処理月の最初の稼動日を取得
           PERFORM  UNTIL  D00-KADOU-KBN  =  '1'
               CALL  'LBLI042A'    USING  FET-M
                                          XDATBAS-DIA
                                          D00-RLBEDD07-AREA
                                          K00-KEY-BU
                                          SQLCA
               EVALUATE  XDATBAS-STAT
                 WHEN    CN-XDATBAS-OK
                   ADD   1            TO  D00-IN-CNT
                 WHEN    OTHER
                   MOVE  K00-KEY-BU                    TO  ABN-KEY
                   MOVE  '新日付マスタＲＥＡＤエラー'  TO  ABN-CMT1
                   MOVE  XDATBAS-STAT                  TO  ABN-CMT2
                   PERFORM  DB-ERR-PROC
               END-EVALUATE
           END-PERFORM
      *> *
      *> G   納品請求処理日判定
           DISPLAY ' D00-HIZUKE = ' D00-HIZUKE8
           IF ( D00-HIZUKE8  =  GYOMU-YYMD )
             THEN
               DISPLAY  '月頭稼動日であるので補正処理を行う。'
             ELSE
               MOVE  CN-EOF           TO  D00-END-FLG
               DISPLAY  '月頭稼動日でないので補正処理しない。'
           END-IF
      *> *
      *> G   新日付マスタクローズ
           CALL  'LBLI042A'        USING  CLS-M
                                          XDATBAS-DIA
                                          D00-RLBEDD07-AREA
                                          K00-KEY-BU
                                          SQLCA
           EVALUATE  XDATBAS-STAT
             WHEN    CN-XDATBAS-OK
                 CONTINUE
             WHEN    OTHER
                 MOVE  K00-KEY-BU                    TO  ABN-KEY
                 MOVE  '新日付マスタクローズエラー'  TO  ABN-CMT1
                 MOVE  XDATBAS-STAT                  TO  ABN-CMT2
                 PERFORM  DB-ERR-PROC
           END-EVALUATE
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     D03 会計ＤＰ用ＩＦテーブルオープン                          *
      *>                                                                 *
      *> *****************************************************************
       D03-OPEN-PROC                      SECTION.
           MOVE  'D03-OPEN-PROC'      TO  ABN-SEC
           MOVE  SPACE                TO  K03-KEY-BU
           MOVE  SEIKYU-YYM           TO  K03-KEIJYO-YYM
           MOVE  'BB21'               TO  K03-DATA-NO
      *> G   計上年月のＢＢ２１データでＩＦテーブルオープン
           CALL  'LBLI042B'        USING  OPN-W
                                          XDATBAS-DIA
                                          D03-RLBLDD1C-AREA
                                          K03-KEY-BU
                                          SQLCA
           EVALUATE  XDATBAS-STAT
             WHEN    CN-XDATBAS-OK
                 CONTINUE
             WHEN    OTHER
                 MOVE  K03-KEY-BU                        TO  ABN-KEY
                 MOVE  '会計ＤＰテーブルオープンエラー'  TO  ABN-CMT1
                 MOVE  XDATBAS-STAT                      TO  ABN-CMT2
                 PERFORM  DB-ERR-PROC
           END-EVALUATE
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     D03 会計ＤＰ用ＩＦテーブルアクセス                          *
      *>                                                                 *
      *> *****************************************************************
       D03-FETCH-PROC                     SECTION.
           MOVE  'D03-FETCH-PROC'     TO  ABN-SEC
           CALL  'LBLI042B'        USING  FET-W
                                          XDATBAS-DIA
                                          D03-RLBLDD1C-AREA
                                          K03-KEY-BU
                                          SQLCA
           EVALUATE  XDATBAS-STAT
             WHEN    CN-XDATBAS-OK
               ADD   1                TO  D03-IN-CNT
             WHEN    CN-XDATBAS-NODATA
               MOVE  CN-EOF           TO  D03-END-FLG
             WHEN    OTHER
                 MOVE  K03-KEY-BU                        TO  ABN-KEY
                 MOVE  '会計ＤＰテーブルアクセスエラー'  TO  ABN-CMT1
                 MOVE  XDATBAS-STAT                      TO  ABN-CMT2
                 PERFORM  DB-ERR-PROC
           END-EVALUATE
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     D03 会計ＤＰ用ＩＦテーブルクローズ                          *
      *>                                                                 *
      *> *****************************************************************
       D03-CLOSE-PROC                     SECTION.
           MOVE  'D03-CLOSE-PROC'     TO  ABN-SEC
      *> *
           CALL  'LBLI042B'        USING  CLS-W
                                          XDATBAS-DIA
                                          D03-RLBLDD1C-AREA
                                          K03-KEY-BU
                                          SQLCA
           EVALUATE  XDATBAS-STAT
             WHEN    CN-XDATBAS-OK
                 CONTINUE
             WHEN    OTHER
                 MOVE  K03-KEY-BU                      TO  ABN-KEY
                 MOVE  '会計ＤＰ用ＩＦクローズエラー'  TO  ABN-CMT1
                 MOVE  XDATBAS-STAT                    TO  ABN-CMT2
                 PERFORM  DB-ERR-PROC
           END-EVALUATE
      *> *
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     差異判定                                                    *
      *>                                                                 *
      *> *****************************************************************
       HANTEI-PROC                        SECTION.
      *> G   差異判定処理
           MOVE  'HANTEI-PROC'        TO  ABN-SEC
      *> *
      *> G   一般諸元マスタ検索
           PERFORM  D01-READ-PROC
      *> *
      *> G   新取引先マスタ検索
           PERFORM  D02-READ-PROC
      *> *
      *> G   移管単価＆金額再計算
           PERFORM  IKAN-KEISAN-PROC
           DISPLAY ' ＜－－－－再計算結果－－－－＞'
           DISPLAY ' データキー = ' D03-RLBLDD1C-KEY
           DISPLAY ' 部品番号   = ' D03-P-NO
           DISPLAY ' 振替部署   = ' D03-FURI-B-CD
           DISPLAY ' 価格層別   = ' D01-K-S-TANK
           DISPLAY ' 価格係数   = ' WK-KEISU
           DISPLAY ' 製品区分   = ' D01-SEIHIN-K
           DISPLAY ' 直販送単価 = ' D01-CHOK-TAN
           DISPLAY ' 再計算単価 = ' WK-TANKA
           DISPLAY ' 再計算金額 = ' WK-KINGAKU
           DISPLAY ' 移管単価   = ' D03-IKAN-TAN
           DISPLAY ' 移管金額   = ' D03-IKAN-KIN
           DISPLAY ' 赤黒区分   = ' D03-AKAKURO-KBN
      *> *
      *> G   差異判定
           IF ( D03-IKAN-TAN  =  WK-TANKA )
             THEN
           DISPLAY ' ＜－－－－差異なし－－－－＞'
               CONTINUE
             ELSE
           DISPLAY ' ＜－－－－差異あり－－－－＞'
      *> G       赤伝（取消）編集
               PERFORM  EDIT-AKA-PROC
      *> G       会計ＤＰ用ＩＦテーブル出力
               PERFORM  D03-OUTPUT-PROC
      *> G       黒伝（差異計上）編集
               PERFORM  EDIT-KURO-PROC
      *> G       会計ＤＰ用ＩＦテーブル出力
               PERFORM  D03-OUTPUT-PROC
           END-IF
      *> *
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     D01 一般諸元マスタ検索                                      *
      *>                                                                 *
      *> *****************************************************************
       D01-READ-PROC                      SECTION.
           MOVE  'D01-READ-PROC'      TO  ABN-SEC
           MOVE  SPACE                TO  K01-KEY-BU
           MOVE  D03-P-NO             TO  K01-P-NO
      *> G   会計ＤＰテーブルの引当部品番号で一般諸元マスタを検索
           CALL  'LBED0100'        USING  READM
                                          XDATBAS-DIA
                                          D01-RLBEDD01-AREA
                                          K01-KEY-BU
                                          SQLCA
           EVALUATE  XDATBAS-STAT
             WHEN    CN-XDATBAS-OK
                 ADD   1              TO  D01-IN-CNT
             WHEN    CN-XDATBAS-NODATA
                 MOVE  K01-KEY-BU                      TO  ABN-KEY
                 MOVE  '一般諸元マスタなし'            TO  ABN-CMT1
                 MOVE  XDATBAS-STAT                    TO  ABN-CMT2
                 PERFORM  DB-ERR-PROC
             WHEN    OTHER
                 MOVE  K01-KEY-BU                      TO  ABN-KEY
                 MOVE  '一般諸元マスタアクセスエラー'  TO  ABN-CMT1
                 MOVE  XDATBAS-STAT                    TO  ABN-CMT2
                 PERFORM  DB-ERR-PROC
           END-EVALUATE
      *> *
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     D02 新取引先マスタ検索                                      *
      *>                                                                 *
      *> *****************************************************************
       D02-READ-PROC                      SECTION.
           MOVE  'D02-READ-PROC'      TO  ABN-SEC
           MOVE  SPACE                TO  K02-KEY-BU
           MOVE  D03-FURI-B-CD        TO  K02-KEY-BU
      *> G   会計ＤＰテーブルの振替部署コードで新取引先マスタを検索
           CALL  'LBED0400'        USING  READM
                                          XDATBAS-DIA
                                          D02-RLBEDD04-AREA
                                          K02-KEY-BU
                                          SQLCA
           EVALUATE  XDATBAS-STAT
             WHEN    CN-XDATBAS-OK
                 ADD   1              TO  D02-IN-CNT
             WHEN    CN-XDATBAS-NODATA
                 MOVE  K02-KEY-BU                      TO  ABN-KEY
                 MOVE  '新取引先マスタなし'            TO  ABN-CMT1
                 MOVE  XDATBAS-STAT                    TO  ABN-CMT2
                 PERFORM  DB-ERR-PROC
             WHEN    OTHER
                 MOVE  K02-KEY-BU                      TO  ABN-KEY
                 MOVE  '新取引先マスタアクセスエラー'  TO  ABN-CMT1
                 MOVE  XDATBAS-STAT                    TO  ABN-CMT2
                 PERFORM  DB-ERR-PROC
           END-EVALUATE
      *> *
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     移管単価＆金額差異計算                                      *
      *>                                                                 *
      *> *****************************************************************
       IKAN-KEISAN-PROC                   SECTION.
           MOVE  'IKAN-KEISAN-PROC'   TO  ABN-SEC
      *> G   一般諸元の国内価格層別ランクで新取引先マスタから使用係数判定
           EVALUATE  D01-K-S-TANK
             WHEN  'S'
               MOVE  D02-S-KEISU      TO  WK-KEISU
             WHEN  'A'
               MOVE  D02-A-KEISU      TO  WK-KEISU
             WHEN  'B'
               MOVE  D02-B-KEISU      TO  WK-KEISU
             WHEN  'C'
               MOVE  D02-C-KEISU      TO  WK-KEISU
             WHEN  'D'
               MOVE  D02-D-KEISU      TO  WK-KEISU
             WHEN  'E'
               MOVE  D02-E-KEISU      TO  WK-KEISU
             WHEN  'F'
               MOVE  D02-F-KEISU      TO  WK-KEISU
             WHEN  'G'
               MOVE  D02-G-KEISU      TO  WK-KEISU
             WHEN  'H'
               MOVE  D02-H-KEISU      TO  WK-KEISU
             WHEN  OTHER
               MOVE  D02-OTHER-KEISU  TO  WK-KEISU
           END-EVALUATE
      *> *
      *> G   再計算
      *> G   中古部品については再計算しない
           IF ( D01-SEIHIN-K  =  '073100' OR '073110' OR '073120' )
             THEN
               MOVE  D03-IKAN-TAN     TO  WK-TANKA
             ELSE
               COMPUTE  WK-TANKA  ROUNDED
                  =     D01-CHOK-TAN      *  WK-KEISU  /  1000
           END-IF
           COMPUTE  WK-KINGAKU  =  WK-TANKA  *  D03-SU
      *> *
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     赤伝（取消）データ編集                                      *
      *>                                                                 *
      *> *****************************************************************
       EDIT-AKA-PROC                      SECTION.
           MOVE  'EDIT-AKA-PROC'      TO  ABN-SEC
      *> G   赤伝（取消）データ編集処理
           MOVE  D03-RLBLDD1C-AREA    TO  W03-RLBLDD1C-AREA
           MOVE  GYOMU-YYMD           TO  W03-SHO-YMD
           ADD   1                    TO  O30-SHO-SEQ-9
           MOVE  O30-SHO-SEQ          TO  W03-SHO-SEQ
           IF ( D03-AKAKURO-KBN  =  '+' )
             THEN
               MOVE  '-'              TO  W03-AKAKURO-KBN
             ELSE
               MOVE  '+'              TO  W03-AKAKURO-KBN
           END-IF
           MOVE  '0'                  TO  W03-SELE-FLG
           MOVE  '0'                  TO  W03-SYORI-FLG
           MOVE  PGMID                TO  W03-KOSIN-PGM
           MOVE  SPACE                TO  W03-TERM-ID
           MOVE  W-HIZUKE             TO  W03-KOSIN-NTJ
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     黒伝（再計上）データ編集                                    *
      *>                                                                 *
      *> *****************************************************************
       EDIT-KURO-PROC                     SECTION.
           MOVE  'EDIT-KURO-PROC'     TO  ABN-SEC
      *> G   黒伝（再計上）データ編集処理
           MOVE  D03-RLBLDD1C-AREA    TO  W03-RLBLDD1C-AREA
           MOVE  GYOMU-YYMD           TO  W03-SHO-YMD
           ADD   1                    TO  O30-SHO-SEQ-9
           MOVE  O30-SHO-SEQ          TO  W03-SHO-SEQ
           MOVE  WK-TANKA             TO  W03-IKAN-TAN
           MOVE  WK-KINGAKU           TO  W03-IKAN-KIN
           MOVE  '0'                  TO  W03-SELE-FLG
           MOVE  '0'                  TO  W03-SYORI-FLG
           MOVE  PGMID                TO  W03-KOSIN-PGM
           MOVE  SPACE                TO  W03-TERM-ID
           MOVE  W-HIZUKE             TO  W03-KOSIN-NTJ
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     D03 会計ＤＰ用ＩＦテーブル追加                              *
      *>                                                                 *
      *> *****************************************************************
       D03-OUTPUT-PROC                    SECTION.
           MOVE  'D03-OUTPUT-PROC'    TO  ABN-SEC
      *> G   会計ＤＰ用ＩＦテーブル追加処理
           CALL  'LBLI042B'        USING  ADDVC
                                          XDATBAS-DIA
                                          W03-RLBLDD1C-AREA
                                          W03-RLBLDD1C-KEY
                                          SQLCA
           EVALUATE  XDATBAS-STAT
             WHEN    CN-XDATBAS-OK
                 ADD   1              TO  D03-OUT-CNT
             WHEN    OTHER
                 MOVE  W03-RLBLDD1C-KEY                    TO  ABN-KEY
                 MOVE  '会計ＤＰ用ＩＦテーブル追加エラー'  TO  ABN-CMT1
                 MOVE  XDATBAS-STAT                        TO  ABN-CMT2
                 PERFORM  DB-ERR-PROC
           END-EVALUATE
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     終了処理                                                    *
      *>                                                                 *
      *> *****************************************************************
       END-PROC                           SECTION.
      *> G   終了処理
           MOVE  'END-PROC'           TO  ABN-SEC
      *> *
      *>     付替情報ﾕﾆｰｸKEY採番ﾌｧｲﾙ出力
           MOVE  CN-NEWLINE           TO  O30-NEWLINE
           WRITE  O30-RLBLIW06-AREA
           ADD   1                    TO  O30-OUT-CNT
      *> *
      *>     ＴＥＸＴファイルクローズ
           CLOSE  I00
           CLOSE  I01
           CLOSE  I02
           CLOSE  O30
      *> *
      *> *   DBｶｰｿﾙｸﾛｰｽﾞ
      *> *
      *> *   DB切断処理
           PERFORM  DB-SINOF-PROC
      *> *
      *> *   終了メッセージの表示
           MOVE  I00-IN-CNT           TO  I00-IN
           MOVE  I01-IN-CNT           TO  I01-IN
           MOVE  I02-IN-CNT           TO  I02-IN
           MOVE  D00-IN-CNT           TO  D00-IN
           MOVE  D01-IN-CNT           TO  D01-IN
           MOVE  D02-IN-CNT           TO  D02-IN
           MOVE  D03-IN-CNT           TO  D03-IN
           MOVE  D03-OUT-CNT          TO  D03-OUT
           MOVE  O30-OUT-CNT          TO  O30-OUT
           DISPLAY  I00-MSG         UPON  SYSOUT
           DISPLAY  I01-MSG         UPON  SYSOUT
           DISPLAY  I02-MSG         UPON  SYSOUT
           DISPLAY  D00-MSG         UPON  SYSOUT
           DISPLAY  D01-MSG         UPON  SYSOUT
           DISPLAY  D02-MSG         UPON  SYSOUT
           DISPLAY  D03-MSG-IN      UPON  SYSOUT
           DISPLAY  D03-MSG-OUT     UPON  SYSOUT
           DISPLAY  O30-MSG         UPON  SYSOUT
           DISPLAY  MSG-END         UPON  SYSOUT
      *> *
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     ＤＢ切断処理                                                *
      *>                                                                 *
      *> *****************************************************************
       DB-SINOF-PROC                      SECTION.
      *> G   ＤＢ切断処理
           MOVE  'DB-SINOF-PROC'      TO  ABN-SEC
      *> *
      *> G   COMMITの発行
           CALL  'LBED0000'        USING  COMIT
                                          XDATBAS-DIA
                                          SQLCA
      *> *
          IF ( XDATBAS-STAT  = CN-XDATBAS-OK )
            THEN
                CONTINUE
            ELSE
                PERFORM  DB-ERR-PROC
          END-IF
      *> *
      *> G  DBの切断
          CALL  'LBED0000'         USING  SINOF
                                          XDATBAS-DIA
                                          SQLCA
      *> *
          IF ( XDATBAS-STAT  = CN-XDATBAS-OK )
            THEN
                CONTINUE
            ELSE
                PERFORM  DB-ERR-PROC
          END-IF
      *> *
          CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     ＤＢエラー処理                                              *
      *>                                                                 *
      *> *****************************************************************
       DB-ERR-PROC                        SECTION.
      *> G   ＤＢのエラー処理
           MOVE  'DB-ERR-PROC'        TO  ABN-SEC
      *> *
           MOVE  SQLCODE              TO  ABEND-CODE
           CALL  'LBED0000'        USING  RBACK
                                          XDATBAS-DIA
                                          SQLCA
      *> *
      *> G   ｱﾍﾞﾝﾄﾞﾒｯｾｰｼﾞ表示とｱﾍﾞﾝﾄﾞ処理
           PERFORM   ABEND-PROC
      *> *
           CONTINUE.
      *> *****************************************************************
      *>                                                                 *
      *>     アベンドメッセージ表示 と アベンド処理                      *
      *>                                                                 *
      *> *****************************************************************
       ABEND-PROC                         SECTION.
      *> G   アベンドメッセージ表示 と アベンド処理
           MOVE     W-DATE            TO  MSG-ABN1(20:8)
           MOVE     W-TIME(1:6)       TO  MSG-ABN1(30:6)
           MOVE     ABEND-CODE        TO  ABN-CD
           DISPLAY  MSG-ABN0        UPON  SYSOUT
           DISPLAY  MSG-ABN1        UPON  SYSOUT
           DISPLAY  MSG-ABN2        UPON  SYSOUT
           DISPLAY  MSG-ABN3        UPON  SYSOUT
           DISPLAY  MSG-ABN4        UPON  SYSOUT
      *> *
           IF  ABN-CMT1       =     SPACE
             THEN
               CONTINUE
             ELSE
               DISPLAY  MSG-ABN5    UPON  SYSOUT
           END-IF
           IF  ABN-CMT2       =     SPACE
             THEN
               CONTINUE
             ELSE
               DISPLAY  MSG-ABN6    UPON  SYSOUT
           END-IF
           IF  ABN-CMT3       =     SPACE
             THEN
               CONTINUE
             ELSE
               DISPLAY  MSG-ABN7    UPON  SYSOUT
           END-IF
      *> *
           DISPLAY  MSG-ABN8        UPON  SYSOUT
           MOVE  255                  TO  RETURN-CODE
           STOP RUN.
        END PROGRAM LBLI0420.